{"name":"Simplicity and synergy","tagline":"Haxe libraries for a better world!","body":"Hi, my name is Andreas, figuring on Github under the alias @ciscoheat. My language of choice is [Haxe](http://haxe.org), and with its power and elegance I'm trying to create useful libraries in the spirit of simplicity and synergy.\r\n\r\n## Haxe libraries\r\n\r\nAll of these are available on [haxelib](http://lib.haxe.org/) for a quick install. \r\n\r\nThe list is sorted in order of \"importance\", where importance is my estimation of how much the library will impact your thinking, programming style, and other long term benefits.\r\n\r\nName | Targets | Description\r\n:----|:-------:|:-----------\r\n[haxedci](https://github.com/ciscoheat/haxedci) | All | Taking programming into the next era with the [DCI architecture](http://fulloo.info/doku.php?id=faq). If you take your time to study and understand this paradigm created by the author of [MVC](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller), you will become a better programmer, guaranteed.\r\n[HaxeContracts](https://github.com/ciscoheat/haxecontracts) | All | Contracts is a way out of the wasteful unit testing that the current programming paradigm seems to force most programmers into. Using Contracts you will move most tests into the real code, and greatly improve the integrity of your objects.\r\n[buddy](https://github.com/ciscoheat/buddy) | All | Most interesting things happens between objects, not within them, and this is where the level of code-based testing should be. Buddy is a [BDD](https://en.wikipedia.org/wiki/Behavior-driven_development) library for helping you move the testing mentality upwards, from method-level to interactions between objects.\r\n[dataclass](https://github.com/ciscoheat/dataclass) | All | Data is the very foundation of a system, representing what the system is (compared to functionality that represent what it does). DataClass helps you define the foundation of your system, simple data objects, with a short, natural syntax.\r\n[mithril-hx](https://github.com/ciscoheat/mithril-hx) | Browser, Node.js | [Mithril](mithril.js.org) is a small, yet great javascript MVC framework that is faster and more flexible than most others. Here are Haxe externs for a library that enables you to solve complex problems with simple tools.\r\n[slambda](https://github.com/ciscoheat/slambda) | All | Do you crave Short Lambdas? Here's a tiny library that adds those convenient `x => x + 1` expressions to your Haxe code in only one extra line.\r\n[haxelow](https://github.com/ciscoheat/haxelow) | Browser, Node.js, Others | A small, flat JSON database library, if you need to store Haxe objects strongly-typed in JSON.\r\n\r\n## Haxe-related\r\n\r\nName | Targets | Description\r\n:----|:-------:|:-----------\r\n[empty-haxe-project](https://github.com/ciscoheat/empty-haxe-project) | Neko, Node.js, Browser | A convenient starting point for a new project, or if you just want to play around and get started quickly. Clone the branch of your choice from the repo, then follow the `README.md` instructions.\r\n[viagrant](https://github.com/ciscoheat/viagrant) | All and more | If you're using [Vagrant](https://www.vagrantup.com/), this will get a box with all your Haxe needs up and running in a few minutes. It also supports a very convenient CMS, [concrete5](http://www.concrete5.org/)\r\n\r\n## Contact info\r\n\r\nIf you want to give feedback for a specific library, I appreciate if you open a Github issue for it. If you want to get in touch about anything else, my email is `ciscoheat AT gmail`. Hope to hear from you!\r\n\r\n/Andreas\r\n","google":"UA-20869379-2","note":"Don't delete this file! It's used internally to help with page regeneration."}