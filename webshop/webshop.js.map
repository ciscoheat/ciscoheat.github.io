{
"version":3,
"file":"webshop.js",
"sourceRoot":"file:///",
"sources":["C:/HaxeToolkit/haxe/std/js/_std/EReg.hx","C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","C:/HaxeToolkit/haxe/std/Lambda.hx","C:/HaxeToolkit/haxe/std/List.hx","C:/HaxeToolkit/haxe/std/js/_std/Reflect.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx","C:/HaxeToolkit/haxe/std/StringBuf.hx","C:/HaxeToolkit/haxe/std/StringTools.hx","C:/HaxeToolkit/haxe/std/js/_std/Type.hx","C:/HaxeToolkit/haxe/std/haxe/CallStack.hx","C:/HaxeToolkit/haxe/std/haxe/Serializer.hx","C:/HaxeToolkit/haxe/std/haxe/Timer.hx","C:/HaxeToolkit/haxe/std/haxe/Unserializer.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/IntMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/ObjectMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/io/Bytes.hx","e:/Projects/Haxe/HaxeContracts/src/haxecontracts/ContractException.hx","C:/HaxeToolkit/haxe/std/js/Boot.hx","C:/HaxeToolkit/haxe/std/js/Browser.hx","C:/HaxeToolkit/haxe/std/js/html/compat/ArrayBuffer.hx","C:/HaxeToolkit/haxe/std/js/html/compat/Uint8Array.hx","e:/Projects/Haxe/mithril/src/mithril/M.hx","E:/Projects/Haxe/mithril/example/webshop/Checkout.hx","e:/Projects/Haxe/mithril/src/mithril/macros/ModuleBuilder.hx","E:/Projects/Haxe/mithril/example/webshop/Loader.hx","E:/Projects/Haxe/mithril/example/webshop/Menu.hx","e:/Projects/Haxe/HaxeContracts/src/haxecontracts/ContractBuilder.hx","E:/Projects/Haxe/mithril/example/webshop/ProductList.hx","E:/Projects/Haxe/mithril/example/webshop/ProductPage.hx","E:/Projects/Haxe/mithril/example/webshop/Search.hx","E:/Projects/Haxe/mithril/example/webshop/ShoppingCart.hx","E:/Projects/Haxe/mithril/example/webshop/Webshop.hx","E:/Projects/Haxe/mithril/example/webshop/models/Category.hx","E:/Projects/Haxe/mithril/example/webshop/models/Product.hx","C:/HaxeToolkit/haxe/std/js/_std/Math.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic inline function new( r : String, opt : String ) : Void {\n\t\tthis.r = new HaxeRegExp(r, opt.split(\"u\").join(\"\")); // 'u' (utf8) depends on page encoding\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic inline function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif (len == null) {\n\t\t\tlen = s.length;\n\t\t} else if (len < 0) {\n\t\t\tif (pos == 0)\n\t\t\t\tlen = s.length + len;\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t}\n\n\t\t#if (js_es < 5)\n\t\tif (pos < 0) {\n\t\t\tpos = s.length + pos;\n\t\t\tif (pos < 0)\n\t\t\t\tpos = 0;\n\t\t}\n\t\t#end\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if (js_es < 5)\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with `using Lambda` and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n\n\t@see https://haxe.org/manual/std-Lambda.html\n**/\nclass Lambda {\n\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>( it : Iterable<A> ) : Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor(i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>( it : Iterable<A> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor(i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new List by applying function `f` to all elements of `it`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function map<A,B>( it : Iterable<A>, f : A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tfor( x in it )\n\t\t\tl.add(f(x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function mapi<A,B>( it : Iterable<A>, f : Int -> A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tvar i = 0;\n\t\tfor( x in it )\n\t\t\tl.add(f(i++,x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tConcatenate a list of lists.\n\n\t\tThe order of elements is preserved.\n\t**/\n\tpublic static function flatten<A>( it : Iterable<Iterable<A>> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor (e in it)\n\t\t\tfor (x in e)\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tA composition of map and flatten.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function flatMap<A,B>( it : Iterable<A>, f: A -> Iterable<B> ) : List<B> {\n\t\treturn Lambda.flatten(Lambda.map(it, f));\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>( it : Iterable<A>, elt : A ) : Bool {\n\t\tfor( x in it )\n\t\t\tif( x == elt )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( !f(x) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>( it : Iterable<A>, f : A -> Void ) {\n\t\tfor( x in it )\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a List containing those elements of `it` for which `f` returned\n\t\ttrue.\n\n\t\tIf `it` is empty, the result is the empty List even if `f` is null.\n\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tvar l = new List<A>();\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A,B>( it : Iterable<A>, f : A -> B -> B, first : B ) : B {\n\t\tfor( x in it )\n\t\t\tfirst = f(x,first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>( it : Iterable<A>, ?pred : A -> Bool ) {\n\t\tvar n = 0;\n\t\tif( pred == null )\n\t\t\tfor( _ in it )\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor( x in it )\n\t\t\t\tif( pred(x) )\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>( it : Iterable<T> ) : Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>( it : Iterable<T>, v : T ) : Int {\n\t\tvar i = 0;\n\t\tfor( v2 in it ) {\n\t\t\tif( v == v2 )\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>( it : Iterable<T>, f : T -> Bool ) : Null<T> {\n\t\tfor( v in it ) {\n\t\t\tif(f(v)) return v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns a new List containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>( a : Iterable<T>, b : Iterable<T> ) : List<T> {\n\t\tvar l = new List();\n\t\tfor( x in a )\n\t\t\tl.add(x);\n\t\tfor( x in b )\n\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tA linked-list of elements. The list is composed of element container objects\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole list content every time.\n\n\t@see https://haxe.org/manual/std-List.html\n**/\nclass List<T> {\n\n\tprivate var h : ListNode<T>;\n\tprivate var q : ListNode<T>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x = ListNode.create(item, null);\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq.next = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x = ListNode.create(item, h);\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h.item;\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q.item;\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h.item;\n\t\th = h.next;\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev:ListNode<T> = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l.item == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l.next;\n\t\t\t\telse\n\t\t\t\t\tprev.next = l.next;\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l.next;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l.item));\n\t\t\tl = l.next;\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l.item);\n\t\t\tl = l.next;\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\n#if neko\nprivate extern class ListNode<T> extends neko.NativeArray<Dynamic> {\n\tvar item(get,set):T;\n\tvar next(get,set):ListNode<T>;\n\tprivate inline function get_item():T return this[0];\n\tprivate inline function set_item(v:T):T return this[0] = v;\n\tprivate inline function get_next():ListNode<T> return this[1];\n\tprivate inline function set_next(v:ListNode<T>):ListNode<T> return this[1] = v;\n\tinline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn untyped __dollar__array(item, next);\n\t}\n}\n#else\nprivate class ListNode<T> {\n\tpublic var item:T;\n\tpublic var next:ListNode<T>;\n\tpublic function new(item:T, next:ListNode<T>) {\n\t\tthis.item = item;\n\t\tthis.next = next;\n\t}\n\t@:extern public inline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn new ListNode(item, next);\n\t}\n}\n#end\n\nprivate class ListIterator<T> {\n\tvar head:ListNode<T>;\n\n\tpublic inline function new(head:ListNode<T>) {\n\t\tthis.head = head;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tvar val = head.item;\n\t\thead = head.next;\n\t\treturn val;\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\t@:pure\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\t@:pure\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if (js_es < 5)\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)\n\tto the `String` class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cpp\nusing cpp.NativeString;\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\treturn postProcessUrlEncode(java.net.URLEncoder.encode(s, \"UTF-8\"));\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#elseif hl\n\t\t\tvar len = 0;\n\t\t\tvar b = @:privateAccess s.bytes.urlEncode(len);\n\t\t\treturn @:privateAccess String.__alloc__(b,len);\n\t\t#elseif lua\n\t\t\ts = lua.NativeStringTools.gsub(s, \"\\n\", \"\\r\\n\");\n\t\t\ts = lua.NativeStringTools.gsub(s, \"([^%w %-%_%.%~])\", function (c) {\n\t\t\t\treturn lua.NativeStringTools.format(\"%%%02X\", lua.NativeStringTools.byte(c) + '');\n\t\t\t});\n\t\t\ts = lua.NativeStringTools.gsub(s, \" \", \"+\");\n\t\t\treturn s;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n#if java\n\tprivate static function postProcessUrlEncode( s : String ) : String {\n\t\tvar ret = new StringBuf();\n\t\tvar i = 0,\n\t\t    len = s.length;\n\t\twhile (i < len) {\n\t\t\tswitch(_charAt(s, i++)) {\n\t\t\tcase '+'.code:\n\t\t\t\tret.add('%20');\n\t\t\tcase '%'.code if (i <= len - 2):\n\t\t\t\tvar c1 = _charAt(s, i++),\n\t\t\t\t    c2 = _charAt(s, i++);\n\t\t\t\tswitch[c1, c2] {\n\t\t\t\tcase ['2'.code, '1'.code]:\n\t\t\t\t\tret.addChar('!'.code);\n\t\t\t\tcase ['2'.code, '7'.code]:\n\t\t\t\t\tret.addChar('\\''.code);\n\t\t\t\tcase ['2'.code, '8'.code]:\n\t\t\t\t\tret.addChar('('.code);\n\t\t\t\tcase ['2'.code, '9'.code]:\n\t\t\t\t\tret.addChar(')'.code);\n\t\t\t\tcase ['7'.code, 'E'.code] | ['7'.code, 'e'.code]:\n\t\t\t\t\tret.addChar('~'.code);\n\t\t\t\tcase _:\n\t\t\t\t\tret.addChar('%'.code);\n\t\t\t\t\tret.addChar(cast c1);\n\t\t\t\t\tret.addChar(cast c2);\n\t\t\t\t}\n\t\t\tcase chr:\n\t\t\t\tret.addChar(cast chr);\n\t\t\t}\n\t\t}\n\t\treturn ret.toString();\n\t}\n#end\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#elseif hl\n\t\t\tvar len = 0;\n\t\t\tvar b = @:privateAccess s.bytes.urlDecode(len);\n\t\t\treturn @:privateAccess String.__alloc__(b,len);\n\t\t#elseif lua\n\t\t\ts = lua.NativeStringTools.gsub (s, \"+\", \" \");\n\t\t\ts = lua.NativeStringTools.gsub (s, \"%%(%x%x)\",\n\t\t\t\tfunction(h) {return lua.NativeStringTools.char(lua.Lua.tonumber(h,16));});\n\t\t\ts = lua.NativeStringTools.gsub (s, \"\\r\\n\", \"\\n\");\n\t\t\treturn s;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: `htmlUnescape(htmlEscape(s)) == s`\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is `null`, the result is unspecified.\n\n\t\tIf `start` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length<start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor(i in 0...start.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\treturn @:privateAccess (s.length >= start.length && s.bytes.compare(0,start.bytes,0,start.length<<1) == 0);\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is `null`, the result is unspecified.\n\n\t\tIf `end` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length<end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add( s.length-end.length );\n\t\tvar p1 = end.c_str();\n\t\tfor(i in 0...end.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn @:privateAccess (slen >= elen && s.bytes.compare((slen - elen) << 1, end.bytes, 0, elen << 1) == 0);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String `\"\"`, or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if (python || lua)\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for `ltrim(rtrim(s))`.\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String `\"\"`, `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String `\"\"`, `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits `length` equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof()` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\treturn lua.NativeStringTools.byte(s,index+1);\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash || cpp || hl)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif (neko || lua)\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Unix.\n\t\tThe input will be quoted, or escaped if necessary.\n\t*/\n\tpublic static function quoteUnixArg(argument:String):String {\n\t\t// Based on cpython's shlex.quote().\n\t\t// https://hg.python.org/cpython/file/a3f076d4f54f/Lib/shlex.py#l278\n\n\t\tif (argument == \"\")\n\t\t\treturn \"''\";\n\n\t\tif (!~/[^a-zA-Z0-9_@%+=:,.\\/-]/.match(argument))\n\t\t\treturn argument;\n\n\t\t// use single quotes, and put single quotes into double quotes\n\t\t// the string $'b is then quoted as '$'\"'\"'b'\n\t\treturn \"'\" + replace(argument, \"'\", \"'\\\"'\\\"'\") + \"'\";\n\t}\n\n\t/**\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\n\t*/\n\tpublic static var winMetaCharacters = [\" \".code, \"(\".code, \")\".code, \"%\".code, \"!\".code, \"^\".code, \"\\\"\".code, \"<\".code, \">\".code, \"&\".code, \"|\".code, \"\\n\".code, \"\\r\".code, \",\".code, \";\".code];\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Windows.\n\t\tThe input will be quoted, or escaped if necessary, such that the output\n\t\twill be parsed as a single argument using the rule specified in\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\n\n\t\tExamples:\n\t\t```\n\t\tquoteWinArg(\"abc\") == \"abc\";\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\n\t\t```\n\t*/\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\n\t\t// If there is no space, tab, back-slash, or double-quotes, and it is not an empty string.\n\t\tif (!~/^[^ \\t\\\\\"]+$/.match(argument)) {\n\n\t\t\t// Based on cpython's subprocess.list2cmdline().\n\t\t\t// https://hg.python.org/cpython/file/50741316dd3a/Lib/subprocess.py#l620\n\n\t\t\tvar result = new StringBuf();\n\t\t\tvar needquote = argument.indexOf(\" \") != -1 || argument.indexOf(\"\\t\") != -1 || argument == \"\";\n\n\t\t\tif (needquote)\n\t\t\t\tresult.add('\"');\n\n\t\t\tvar bs_buf = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tswitch (argument.charCodeAt(i)) {\n\t\t\t\t\tcase \"\\\\\".code:\n\t\t\t\t\t\t// Don't know if we need to double yet.\n\t\t\t\t\t\tbs_buf.add(\"\\\\\");\n\t\t\t\t\tcase '\"'.code:\n\t\t\t\t\t\t// Double backslashes.\n\t\t\t\t\t\tvar bs = bs_buf.toString();\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\tresult.add('\\\\\"');\n\t\t\t\t\tcase c:\n\t\t\t\t\t\t// Normal char\n\t\t\t\t\t\tif (bs_buf.length > 0) {\n\t\t\t\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.addChar(c);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add remaining backslashes, if any.\n\t\t\tresult.add(bs_buf.toString());\n\n\t\t\tif (needquote) {\n\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\tresult.add('\"');\n\t\t\t}\n\n\t\t\targument = result.toString();\n\t\t}\n\n\t\tif (escapeMetaCharacters) {\n\t\t\tvar result = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tvar c = argument.charCodeAt(i);\n\t\t\t\tif (winMetaCharacters.indexOf(c) >= 0) {\n\t\t\t\t\tresult.addChar(\"^\".code);\n\t\t\t\t}\n\t\t\t\tresult.addChar(c);\n\t\t\t}\n\t\t\treturn result.toString();\n\t\t} else {\n\t\t\treturn argument;\n\t\t}\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tcase 9:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);\n\t\tcase 10:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);\n\t\tcase 11:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);\n\t\tcase 12:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);\n\t\tcase 13:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);\n\t\tcase 14:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static inline function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\treturn ((cast e).__constructs__ : Array<String>).copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic inline static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped __define_feature__(\"Type.allEnums\", e.__empty_constructs__);\n\t}\n\n}\n\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tElements return by `CallStack` methods.\n**/\nenum StackItem {\n\tCFunction;\n\tModule( m : String );\n\tFilePos( s : Null<StackItem>, file : String, line : Int );\n\tMethod( classname : String, method : String );\n\tLocalFunction( ?v : Int );\n}\n\n/**\n\tGet informations about the call stack.\n**/\nclass CallStack {\n\t#if js\n\tstatic var lastException:js.Error;\n\n\tstatic function getStack(e:js.Error):Array<StackItem> {\n\t\tif (e == null) return [];\n\t\t// https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\t\tvar oldValue = (untyped Error).prepareStackTrace;\n\t\t(untyped Error).prepareStackTrace = function (error, callsites :Array<Dynamic>) {\n\t\t\tvar stack = [];\n\t\t\tfor (site in callsites) {\n\t\t\t\tif (wrapCallSite != null) site = wrapCallSite(site);\n\t\t\t\tvar method = null;\n\t\t\t\tvar fullName :String = site.getFunctionName();\n\t\t\t\tif (fullName != null) {\n\t\t\t\t\tvar idx = fullName.lastIndexOf(\".\");\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tvar className = fullName.substr(0, idx);\n\t\t\t\t\t\tvar methodName = fullName.substr(idx+1);\n\t\t\t\t\t\tmethod = Method(className, methodName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstack.push(FilePos(method, site.getFileName(), site.getLineNumber()));\n\t\t\t}\n\t\t\treturn stack;\n\t\t}\n\t\tvar a = makeStack(e.stack);\n\t\t(untyped Error).prepareStackTrace = oldValue;\n\t\treturn a;\n\t}\n\n\t// support for source-map-support module\n\t@:noCompletion\n\tpublic static var wrapCallSite:Dynamic->Dynamic;\n\t#end\n\n\t/**\n\t\tReturn the call stack elements, or an empty array if not available.\n\t**/\n\tpublic static function callStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\tvar a = makeStack(untyped __dollar__callstack());\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = makeStack( new flash.errors.Error().getStackTrace() );\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%s\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_call_stack(true);\n\t\t\treturn makeStack(s);\n\t\t#elseif js\n\t\t\ttry {\n\t\t\t\tthrow new js.Error();\n\t\t\t} catch( e : Dynamic ) {\n\t\t\t\tvar a = getStack(e);\n\t\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.lang.Thread.currentThread().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(1, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar infos = python.lib.Traceback.extract_stack();\n\t\t\tinfos.pop();\n\t\t\tinfos.reverse();\n\t\t\tfor (elem in infos)\n\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\treturn stack;\n\t\t#elseif lua\n\t\t\tvar stack = [];\n\t\t\tvar infos = lua.Debug.traceback();\n\t\t\tvar luastack = infos.split(\"\\n\").slice(2,-1);\n\t\t\tfor (s in luastack){\n\t\t\t\tvar parts = s.split(\":\");\n\t\t\t\tvar file  = parts[0];\n\t\t\t\tvar line  = parts[1];\n\t\t\t\t// TODO: Give more information for FilePos\n\t\t\t\tstack.push(FilePos(null, file, Std.parseInt(line)));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#elseif hl\n\t\t\ttry {\n\t\t\t\tthrow null;\n\t\t\t} catch( e : Dynamic ) {\n\t\t\t\tvar st = _getExceptionStack();\n\t\t\t\treturn makeStack(st.length > 2 ? st.sub(2,st.length - 2) : st);\n\t\t\t}\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t#if hl\n\t@:hlNative(\"std\", \"exception_stack\") static function _getExceptionStack() : hl.NativeArray<hl.Bytes> { return null; }\n\t#end\n\n\t/**\n\t\tReturn the exception stack : this is the stack elements between\n\t\tthe place the last exception was thrown and the place it was\n\t\tcaught, or an empty array if not available.\n\t**/\n\t#if cpp @:noDebug #end /* Do not mess up the exception stack */\n\tpublic static function exceptionStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\treturn makeStack(untyped __dollar__excstack());\n\t\t#elseif as3\n\t\t\treturn new Array();\n\t\t#elseif hl\n\t\t\treturn makeStack(_getExceptionStack());\n\t\t#elseif flash\n\t\t\tvar err : flash.errors.Error = untyped flash.Boot.lastError;\n\t\t\tif( err == null ) return new Array();\n\t\t\tvar a = makeStack( err.getStackTrace() );\n\t\t\tvar c = callStack();\n\t\t\tvar i = c.length - 1;\n\t\t\twhile( i > 0 ) {\n\t\t\t\tif( Std.string(a[a.length-1]) == Std.string(c[i]) )\n\t\t\t\t\ta.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%e\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_exception_stack();\n\t\t\treturn makeStack(s);\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.internal.Exceptions.currentException().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// stack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(cs.internal.Exceptions.exception, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar exc = python.lib.Sys.exc_info();\n\t\t\tif (exc._3 != null)\n\t\t\t{\n\t\t\t\tvar infos = python.lib.Traceback.extract_tb(exc._3);\n\t\t\t\tinfos.reverse();\n\t\t\t\tfor (elem in infos)\n\t\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#elseif js\n\t\t\treturn untyped __define_feature__(\"haxe.CallStack.exceptionStack\", getStack(lastException));\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a representation of the stack as a printable string.\n\t**/\n\tpublic static function toString( stack : Array<StackItem> ) {\n\t\tvar b = new StringBuf();\n\t\tfor( s in stack ) {\n\t\t\tb.add(\"\\nCalled from \");\n\t\t\titemToString(b,s);\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\tprivate static function itemToString( b : StringBuf, s ) {\n\t\tswitch( s ) {\n\t\tcase CFunction:\n\t\t\tb.add(\"a C function\");\n\t\tcase Module(m):\n\t\t\tb.add(\"module \");\n\t\t\tb.add(m);\n\t\tcase FilePos(s,file,line):\n\t\t\tif( s != null ) {\n\t\t\t\titemToString(b,s);\n\t\t\t\tb.add(\" (\");\n\t\t\t}\n\t\t\tb.add(file);\n\t\t\tb.add(\" line \");\n\t\t\tb.add(line);\n\t\t\tif( s != null ) b.add(\")\");\n\t\tcase Method(cname,meth):\n\t\t\tb.add(cname);\n\t\t\tb.add(\".\");\n\t\t\tb.add(meth);\n\t\tcase LocalFunction(n):\n\t\t\tb.add(\"local function #\");\n\t\t\tb.add(n);\n\t\t}\n\t}\n\n\t#if cpp @:noDebug #end /* Do not mess up the exception stack */\n\tprivate static function makeStack(s #if cs : cs.system.diagnostics.StackTrace #elseif hl : hl.NativeArray<hl.Bytes> #end) {\n\t\t#if neko\n\t\t\tvar a = new Array();\n\t\t\tvar l = untyped __dollar__asize(s);\n\t\t\tvar i = 0;\n\t\t\twhile( i < l ) {\n\t\t\t\tvar x = s[i++];\n\t\t\t\tif( x == null )\n\t\t\t\t\ta.unshift(CFunction);\n\t\t\t\telse if( untyped __dollar__typeof(x) == __dollar__tstring )\n\t\t\t\t\ta.unshift(Module(new String(x)));\n\t\t\t\telse\n\t\t\t\t\ta.unshift(FilePos(null,new String(untyped x[0]),untyped x[1]));\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = new Array();\n\t\t\tvar r = ~/at ([^\\/]+?)\\$?(\\/[^\\(]+)?\\(\\)(\\[(.*?):([0-9]+)\\])?/;\n\t\t\tvar rlambda = ~/^MethodInfo-([0-9]+)$/g;\n\t\t\twhile( r.match(s) ) {\n\t\t\t\tvar cl = r.matched(1).split(\"::\").join(\".\");\n\t\t\t\tvar meth = r.matched(2);\n\t\t\t\tvar item;\n\t\t\t\tif( meth == null ) {\n\t\t\t\t\tif( rlambda.match(cl) )\n\t\t\t\t\t\titem = LocalFunction(Std.parseInt(rlambda.matched(1)));\n\t\t\t\t\telse\n\t\t\t\t\t\titem = Method(cl,\"new\");\n\t\t\t\t} else\n\t\t\t\t\titem = Method(cl,meth.substr(1));\n\t\t\t\tif( r.matched(3) != null )\n\t\t\t\t\titem = FilePos( item, r.matched(4), Std.parseInt(r.matched(5)) );\n\t\t\t\ta.push(item);\n\t\t\t\ts = r.matchedRight();\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\tif (!untyped __call__(\"isset\", __var__(\"GLOBALS\", s)))\n\t\t\t\treturn [];\n\t\t\tvar a : Array<String> = untyped __var__(\"GLOBALS\", s);\n\t\t\tvar m = [];\n\t\t\tfor( i in 0...a.length - ((s == \"%s\") ? 2 : 0)) {\n\t\t\t\tvar d = a[i].split(\"::\");\n\t\t\t\tm.unshift(Method(d[0],d[1]));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif cpp\n\t\t\tvar stack : Array<String> = s;\n\t\t\tvar m = new Array<StackItem>();\n\t\t\tfor(func in stack) {\n\t\t\t\tvar words = func.split(\"::\");\n\t\t\t\tif (words.length==0)\n\t\t\t\t\tm.push(CFunction)\n\t\t\t\telse if (words.length==2)\n\t\t\t\t\tm.push(Method(words[0],words[1]));\n\t\t\t\telse if (words.length==4)\n\t\t\t\t\tm.push(FilePos( Method(words[0],words[1]),words[2],Std.parseInt(words[3])));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif js\n\t\t\tif (s == null) {\n\t\t\t\treturn [];\n\t\t\t} else if ((untyped __js__(\"typeof\"))(s) == \"string\") {\n\t\t\t\t// Return the raw lines in browsers that don't support prepareStackTrace\n\t\t\t\tvar stack : Array<String> = s.split(\"\\n\");\n\t\t\t\tif( stack[0] == \"Error\" ) stack.shift();\n\t\t\t\tvar m = [];\n\t\t\t\tvar rie10 = ~/^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$/;\n\t\t\t\tfor( line in stack ) {\n\t\t\t\t\tif( rie10.match(line) ) {\n\t\t\t\t\t\tvar path = rie10.matched(1).split(\".\");\n\t\t\t\t\t\tvar meth = path.pop();\n\t\t\t\t\t\tvar file = rie10.matched(2);\n\t\t\t\t\t\tvar line = Std.parseInt(rie10.matched(3));\n\t\t\t\t\t\tm.push(FilePos( meth == \"Anonymous function\" ? LocalFunction() : meth == \"Global code\" ? null : Method(path.join(\".\"),meth), file, line ));\n\t\t\t\t\t} else\n\t\t\t\t\t\tm.push(Module(StringTools.trim(line))); // A little weird, but better than nothing\n\t\t\t\t}\n\t\t\t\treturn m;\n\t\t\t} else {\n\t\t\t\treturn cast s;\n\t\t\t}\n\t\t#elseif cs\n\t\t\tvar stack = [];\n\t\t\tfor (i in 0...s.FrameCount)\n\t\t\t{\n\t\t\t\tvar frame = s.GetFrame(i);\n\t\t\t\tvar m = frame.GetMethod();\n\n\t\t\t\tif (m == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar method = StackItem.Method(m.ReflectedType.ToString(), m.Name);\n\n\t\t\t\tvar fileName = frame.GetFileName();\n\t\t\t\tvar lineNumber = frame.GetFileLineNumber();\n\n\t\t\t\tif (fileName != null || lineNumber >= 0)\n\t\t\t\t\tstack.push(FilePos(method, fileName, lineNumber));\n\t\t\t\telse\n\t\t\t\t\tstack.push(method);\n\t\t\t}\n\t\t\treturn stack;\n\t\t#elseif hl\n\t\t\tvar stack = [];\n\t\t\tvar r = ~/^([A-Za-z0-9.$_]+)\\.([A-Za-z0-9_]+)\\((.+):([0-9]+)\\)$/;\n\t\t\tfor( i in 0...s.length-1 ) {\n\t\t\t\tvar str = @:privateAccess String.fromUCS2(s[i]);\n\t\t\t\tif( r.match(str) )\n\t\t\t\t\tstack.push(FilePos(Method(r.matched(1), r.matched(2)), r.matched(3), Std.parseInt(r.matched(4))));\n\t\t\t\telse\n\t\t\t\t\tstack.push(Module(str));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Serializer class can be used to encode values and objects into a `String`,\n\tfrom which the `Unserializer` class can recreate the original representation.\n\n\tThis class can be used in two ways:\n\n\t- create a `new Serializer()` instance, call its `serialize()` method with\n\t\tany argument and finally retrieve the String representation from\n\t\t`toString()`\n\t- call `Serializer.run()` to obtain the serialized representation of a\n\t\tsingle argument\n\n\tSerialization is guaranteed to work for all haxe-defined classes, but may\n\tor may not work for instances of external/native classes.\n\n\tThe specification of the serialization format can be found here:\n\t<https://haxe.org/manual/serialization/format>\n**/\nclass Serializer {\n\n\t/**\n\t\tIf the values you are serializing can contain circular references or\n\t\tobjects repetitions, you should set `USE_CACHE` to true to prevent\n\t\tinfinite loops.\n\n\t\tThis may also reduce the size of serialization Strings at the expense of\n\t\tperformance.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useCache field.\n\t**/\n\tpublic static var USE_CACHE = false;\n\n\t/**\n\t\tUse constructor indexes for enums instead of names.\n\n\t\tThis may reduce the size of serialization Strings, but makes them less\n\t\tsuited for long-term storage: If constructors are removed or added from\n\t\tthe enum, the indices may no longer match.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useEnumIndex field.\n\t**/\n\tpublic static var USE_ENUM_INDEX = false;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\tstatic var BASE64_CODES = null;\n\n\tvar buf : StringBuf;\n\tvar cache : Array<Dynamic>;\n\tvar shash : haxe.ds.StringMap<Int>;\n\tvar scount : Int;\n\n\t/**\n\t\tThe individual cache setting for `this` Serializer instance.\n\n\t\tSee USE_CACHE for a complete description.\n\t**/\n\tpublic var useCache : Bool;\n\n\t/**\n\t\tThe individual enum index setting for `this` Serializer instance.\n\n\t\tSee USE_ENUM_INDEX for a complete description.\n\t**/\n\tpublic var useEnumIndex : Bool;\n\n\t/**\n\t\tCreates a new Serializer instance.\n\n\t\tSubsequent calls to `this.serialize` will append values to the\n\t\tinternal buffer of this String. Once complete, the contents can be\n\t\tretrieved through a call to `this.toString`.\n\n\t\tEach Serializer instance maintains its own cache if this.useCache` is\n\t\ttrue.\n\t**/\n\tpublic function new() {\n\t\tbuf = new StringBuf();\n\t\tcache = new Array();\n\t\tuseCache = USE_CACHE;\n\t\tuseEnumIndex = USE_ENUM_INDEX;\n\t\tshash = new haxe.ds.StringMap();\n\t\tscount = 0;\n\t}\n\n\t/**\n\t\tReturn the String representation of `this` Serializer.\n\n\t\tThe exact format specification can be found here:\n\t\thttps://haxe.org/manual/serialization/format\n\t**/\n\tpublic function toString() {\n\t\treturn buf.toString();\n\t}\n\n\t/* prefixes :\n\t\ta : array\n\t\tb : hash\n\t\tc : class\n\t\td : Float\n\t\te : reserved (float exp)\n\t\tf : false\n\t\tg : object end\n\t\th : array/list/hash end\n\t\ti : Int\n\t\tj : enum (by index)\n\t\tk : NaN\n\t\tl : list\n\t\tm : -Inf\n\t\tn : null\n\t\to : object\n\t\tp : +Inf\n\t\tq : haxe.ds.IntMap\n\t\tr : reference\n\t\ts : bytes (base64)\n\t\tt : true\n\t\tu : array nulls\n\t\tv : date\n\t\tw : enum\n\t\tx : exception\n\t\ty : urlencoded string\n\t\tz : zero\n\t\tA : Class<Dynamic>\n\t\tB : Enum<Dynamic>\n\t\tM : haxe.ds.ObjectMap\n\t\tC : custom\n\t*/\n\n\tfunction serializeString( s : String ) {\n\t\tvar x = shash.get(s);\n\t\tif( x != null ) {\n\t\t\tbuf.add(\"R\");\n\t\t\tbuf.add(x);\n\t\t\treturn;\n\t\t}\n\t\tshash.set(s,scount++);\n\t\t#if old_serialize\n\t\t\t// no more support for -D old_serialize due to 'j' reuse\n\t\t\t#if error #end\n\t\t#end\n\t\tbuf.add(\"y\");\n\t\ts = StringTools.urlEncode(s);\n\t\tbuf.add(s.length);\n\t\tbuf.add(\":\");\n\t\tbuf.add(s);\n\t}\n\n\tfunction serializeRef(v) {\n\t\t#if js\n\t\tvar vt = untyped __js__(\"typeof\")(v);\n\t\t#end\n\t\tfor( i in 0...cache.length ) {\n\t\t\t#if js\n\t\t\tvar ci = cache[i];\n\t\t\tif( untyped __js__(\"typeof\")(ci) == vt && ci == v ) {\n\t\t\t#else\n\t\t\tif( cache[i] == v ) {\n\t\t\t#end\n\t\t\t\tbuf.add(\"r\");\n\t\t\t\tbuf.add(i);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tcache.push(v);\n\t\treturn false;\n\t}\n\n\t#if flash\n\t// only the instance variables\n\n\tfunction serializeClassFields(v,c) {\n\t\tvar xml : flash.xml.XML = untyped __global__[\"flash.utils.describeType\"](c);\n\t\tvar vars = xml.factory[0].child(\"variable\");\n\t\tfor( i in 0...vars.length() ) {\n\t\t\tvar f = vars[i].attribute(\"name\").toString();\n\t\t\tif( !v.hasOwnProperty(f) )\n\t\t\t\tcontinue;\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\t#end\n\n\tfunction serializeFields(v) {\n\t\tfor( f in Reflect.fields(v) ) {\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\n\t/**\n\t\tSerializes `v`.\n\n\t\tAll haxe-defined values and objects with the exception of functions can\n\t\tbe serialized. Serialization of external/native objects is not\n\t\tguaranteed to work.\n\n\t\tThe values of `this.useCache` and `this.useEnumIndex` may affect\n\t\tserialization output.\n\t**/\n\tpublic function serialize( v : Dynamic ) {\n\t\tswitch( Type.typeof(v) ) {\n\t\tcase TNull:\n\t\t\tbuf.add(\"n\");\n\t\tcase TInt:\n\t\t\tvar v : Int = v;\n\t\t\tif( v == 0 ) {\n\t\t\t\tbuf.add(\"z\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbuf.add(\"i\");\n\t\t\tbuf.add(v);\n\t\tcase TFloat:\n\t\t\tvar v : Float = v;\n\t\t\tif( Math.isNaN(v) )\n\t\t\t\tbuf.add(\"k\");\n\t\t\telse if( !Math.isFinite(v) )\n\t\t\t\tbuf.add(if( v < 0 ) \"m\" else \"p\");\n\t\t\telse {\n\t\t\t\tbuf.add(\"d\");\n\t\t\t\tbuf.add(v);\n\t\t\t}\n\t\tcase TBool:\n\t\t\tbuf.add(if( v ) \"t\" else \"f\");\n\t\tcase TClass(c):\n\t\t\tif( #if neko untyped c.__is_String #else c == String #end ) {\n\t\t\t\tserializeString(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\treturn;\n\t\t\tswitch( #if (neko || cs || python) Type.getClassName(c) #else c #end ) {\n\t\t\tcase #if (neko || cs || python) \"Array\" #else cast Array #end:\n\t\t\t\tvar ucount = 0;\n\t\t\t\tbuf.add(\"a\");\n\t\t\t\t#if (flash || python || hl)\n\t\t\t\tvar v : Array<Dynamic> = v;\n\t\t\t\t#end\n\t\t\t\tvar l = #if (neko || flash || php || cs || java || python || hl || lua) v.length #elseif cpp v.__length() #else __getField(v, \"length\") #end;\n\t\t\t\tfor( i in 0...l ) {\n\t\t\t\t\tif( v[i] == null )\n\t\t\t\t\t\tucount++;\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tucount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tserialize(v[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"List\" #else cast List #end:\n\t\t\t\tbuf.add(\"l\");\n\t\t\t\tvar v : List<Dynamic> = v;\n\t\t\t\tfor( i in v )\n\t\t\t\t\tserialize(i);\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"Date\" #else cast Date #end:\n\t\t\t\tvar d : Date = v;\n\t\t\t\tbuf.add(\"v\");\n\t\t\t\tbuf.add(d.getTime());\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.StringMap\" #else cast haxe.ds.StringMap #end:\n\t\t\t\tbuf.add(\"b\");\n\t\t\t\tvar v : haxe.ds.StringMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tserializeString(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.IntMap\" #else cast haxe.ds.IntMap #end:\n\t\t\t\tbuf.add(\"q\");\n\t\t\t\tvar v : haxe.ds.IntMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tbuf.add(\":\");\n\t\t\t\t\tbuf.add(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.ObjectMap\" #else cast haxe.ds.ObjectMap #end:\n\t\t\t\tbuf.add(\"M\");\n\t\t\t\tvar v : haxe.ds.ObjectMap<Dynamic,Dynamic> = v;\n\t\t\t\tfor ( k in v.keys() ) {\n\t\t\t\t\t#if (js || neko)\n\t\t\t\t\tvar id = Reflect.field(k, \"__id__\");\n\t\t\t\t\tReflect.deleteField(k, \"__id__\");\n\t\t\t\t\tserialize(k);\n\t\t\t\t\tReflect.setField(k, \"__id__\", id);\n\t\t\t\t\t#else\n\t\t\t\t\tserialize(k);\n\t\t\t\t\t#end\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.io.Bytes\" #else cast haxe.io.Bytes #end:\n\t\t\t\tvar v : haxe.io.Bytes = v;\n\t\t\t\t#if neko\n\t\t\t\tvar chars = new String(base_encode(v.getData(),untyped BASE64.__s));\n\t\t\t\tbuf.add(\"s\");\n\t\t\t\tbuf.add(chars.length);\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(chars);\n\t\t\t\t#else\n\n\t\t\t\tbuf.add(\"s\");\n\t\t\t\tbuf.add(Math.ceil((v.length * 8) / 6));\n\t\t\t\tbuf.add(\":\");\n\n\t\t\t\tvar i = 0;\n\t\t\t\tvar max = v.length - 2;\n\t\t\t\tvar b64 = BASE64_CODES;\n\t\t\t\tif( b64 == null ) {\n\t\t\t\t\tb64 = new haxe.ds.Vector(BASE64.length);\n\t\t\t\t\tfor( i in 0...BASE64.length )\n\t\t\t\t\t\tb64[i] = BASE64.charCodeAt(i);\n\t\t\t\t\tBASE64_CODES = b64;\n\t\t\t\t}\n\t\t\t\twhile( i < max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tvar b3 = v.get(i++);\n\n\t\t\t\t\tbuf.addChar(b64[b1 >> 2]);\n\t\t\t\t\tbuf.addChar(b64[((b1 << 4) | (b2 >> 4)) & 63]);\n\t\t\t\t\tbuf.addChar(b64[((b2 << 2) | (b3 >> 6)) & 63]);\n\t\t\t\t\tbuf.addChar(b64[b3 & 63]);\n\t\t\t\t}\n\t\t\t\tif( i == max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tbuf.addChar(b64[b1 >> 2]);\n\t\t\t\t\tbuf.addChar(b64[((b1 << 4) | (b2 >> 4)) & 63]);\n\t\t\t\t\tbuf.addChar(b64[(b2 << 2) & 63]);\n\t\t\t\t} else if( i == max + 1 ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tbuf.addChar(b64[b1 >> 2]);\n\t\t\t\t\tbuf.addChar(b64[(b1 << 4) & 63]);\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\tdefault:\n\t\t\t\tif( useCache ) cache.pop();\n\t\t\t\tif( #if flash try v.hxSerialize != null catch( e : Dynamic ) false #elseif (cs || java || python) Reflect.hasField(v, \"hxSerialize\") #elseif (php && php7) php.Global.method_exists(v, 'hxSerialize') #else v.hxSerialize != null #end  ) {\n\t\t\t\t\tbuf.add(\"C\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\tv.hxSerialize(this);\n\t\t\t\t\tbuf.add(\"g\");\n\t\t\t\t} else {\n\t\t\t\t\tbuf.add(\"c\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\t#if flash\n\t\t\t\t\tserializeClassFields(v,c);\n\t\t\t\t\t#else\n\t\t\t\t\tserializeFields(v);\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t}\n\t\tcase TObject:\n\t\t\tif (Std.is(v,Class)) {\n\t\t\t\tvar className = Type.getClassName(v);\n\t\t\t\t#if (flash || cpp)\n\t\t\t\t// Currently, Enum and Class are the same for flash and cpp.\n\t\t\t\t//  use resolveEnum to test if it is actually an enum\n\t\t\t\tif (Type.resolveEnum(className)!=null) buf.add(\"B\") else\n\t\t\t\t#end\n\t\t\t\tbuf.add(\"A\");\n\t\t\t\tserializeString(className);\n\t\t\t} else if (Std.is(v,Enum)) {\n\t\t\t\tbuf.add(\"B\");\n\t\t\t\tserializeString(Type.getEnumName(v));\n\t\t\t} else {\n\t\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\t\treturn;\n\t\t\t\tbuf.add(\"o\");\n\t\t\t\tserializeFields(v);\n\t\t\t}\n\t\tcase TEnum(e):\n\t\t\tif( useCache ) {\n\t\t\t\tif( serializeRef(v) )\n\t\t\t\t\treturn;\n\t\t\t\tcache.pop();\n\t\t\t}\n\t\t\tbuf.add(useEnumIndex?\"j\":\"w\");\n\t\t\tserializeString(Type.getEnumName(e));\n\t\t\t#if neko\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(new String(v.tag));\n\t\t\tbuf.add(\":\");\n\t\t\tif( v.args == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tvar l : Int = untyped __dollar__asize(v.args);\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(v.args[i]);\n\t\t\t}\n\t\t\t#elseif flash\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tvar i : Int = v.index;\n\t\t\t\tbuf.add(i);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.params;\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif cpp\n\t\t\tvar enumBase:cpp.EnumBase = v;\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(enumBase.getIndex());\n\t\t\t} else\n\t\t\t\tserializeString(enumBase.getTag());\n\t\t\tbuf.add(\":\");\n\t\t\tvar len = enumBase.getParamCount();\n\t\t\tbuf.add(len);\n\t\t\tfor( p in 0...len )\n\t\t\t\tserialize( enumBase.getParamI(p));\n\t\t\t#elseif php\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l : Int = untyped __call__(\"count\", v.params);\n\t\t\tif( l == 0 || v.params == null)\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l ) {\n\t\t\t\t\t#if (php && php7)\n\t\t\t\t\tserialize(v.params[i]);\n\t\t\t\t\t#elseif php\n\t\t\t\t\tserialize(untyped __field__(v, __php__(\"params\"), i));\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t}\n\t\t\t#elseif (java || cs || python || hl)\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(Type.enumIndex(v));\n\t\t\t} else\n\t\t\t\tserializeString(Type.enumConstructor(v));\n\t\t\tbuf.add(\":\");\n\t\t\tvar arr:Array<Dynamic> = Type.enumParameters(v);\n\t\t\tif (arr != null)\n\t\t\t{\n\t\t\t\tbuf.add(arr.length);\n\t\t\t\tfor (v in arr)\n\t\t\t\t\tserialize(v);\n\t\t\t} else {\n\t\t\t\tbuf.add(\"0\");\n\t\t\t}\n\n\t\t\t#else\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v[1]);\n\t\t\t} else\n\t\t\t\tserializeString(v[0]);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l = __getField(v, \"length\");\n\t\t\tbuf.add(l - 2);\n\t\t\tfor( i in 2...l )\n\t\t\t\tserialize(v[i]);\n\t\t\t#end\n\t\t\tif( useCache ) cache.push(v);\n\t\tcase TFunction:\n\t\t\tthrow \"Cannot serialize function\";\n\t\tdefault:\n\t\t\t#if neko\n\t\t\tif( untyped (__i32__kind != null && __dollar__iskind(v,__i32__kind)) ) {\n\t\t\t\tbuf.add(\"i\");\n\t\t\t\tbuf.add(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t#end\n\t\t\tthrow \"Cannot serialize \"+Std.string(v);\n\t\t}\n\t}\n\n\t@:extern inline function __getField(o:Dynamic, f:String):Dynamic return untyped o[f];\n\n\tpublic function serializeException( e : Dynamic ) {\n\t\tbuf.add(\"x\");\n\t\t#if flash\n\t\tif( untyped __is__(e,__global__[\"Error\"]) ) {\n\t\t\tvar e : flash.errors.Error = e;\n\t\t\tvar s = e.getStackTrace();\n\t\t\tif( s == null )\n\t\t\t\tserialize(e.message);\n\t\t\telse\n\t\t\t\tserialize(s);\n\t\t\treturn;\n\t\t}\n\t\t#end\n\t\tserialize(e);\n\t}\n\n\t/**\n\t\tSerializes `v` and returns the String representation.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tSerializer, serialize `v` into it and obtain the result through a call\n\t\tto toString().\n\t**/\n\tpublic static function run( v : Dynamic ) {\n\t\tvar s = new Serializer();\n\t\ts.serialize(v);\n\t\treturn s.toString();\n\t}\n\n\t#if neko\n\tstatic var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\t#end\n\n}\n\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#else\n\t\tprivate var event : MainLoop.MainEvent;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this.run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#else\n\t\t\tvar dt = time_ms / 1000;\n\t\t\tevent = MainLoop.add(function() {\n\t\t\t\t@:privateAccess event.nextRun += dt;\n\t\t\t\trun();\n\t\t\t});\n\t\t\tevent.delay(dt);\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\tif(timer != null) {\n\t\t\t\ttimer.cancel();\n\t\t\t\ttimer = null;\n\t\t\t}\n\t\t\ttask = null;\n\t\t#else\n\t\t\tif( event != null ) {\n\t\t\t\tevent.stop();\n\t\t\t\tevent = null;\n\t\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static inline function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif python\n\t\t\treturn Sys.cpuTime();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n@:noDoc\ntypedef TypeResolver = {\n\tfunction resolveClass( name : String ) : Class<Dynamic>;\n\tfunction resolveEnum( name : String ) : Enum<Dynamic>;\n}\n\n/**\n\tThe `Unserializer` class is the complement to the `Serializer` class. It parses\n\ta serialization `String` and creates objects from the contained data.\n\n\tThis class can be used in two ways:\n\n\t- create a `new Unserializer()` instance with a given serialization\n\t\tString, then call its `unserialize()` method until all values are\n\t\textracted\n\t- call `Unserializer.run()`  to unserialize a single value from a given\n\t\tString\n\n\tThe specification of the serialization format can be found here:\n\t<https://haxe.org/manual/serialization/format>\n**/\nclass Unserializer {\n\n\t/**\n\t\tThis value can be set to use custom type resolvers.\n\n\t\tA type resolver finds a `Class` or `Enum` instance from a given `String`. \n\t\tBy default, the Haxe `Type` Api is used.\n\n\t\tA type resolver must provide two methods:\n\n\t\t1. `resolveClass(name:String):Class<Dynamic>` is called to determine a\n\t\t\t\t`Class` from a class name\n\t\t2. `resolveEnum(name:String):Enum<Dynamic>` is called to determine an\n\t\t\t\t`Enum` from an enum name\n\n\t\tThis value is applied when a new `Unserializer` instance is created.\n\t\tChanging it afterwards has no effect on previously created instances.\n\t**/\n\tpublic static var DEFAULT_RESOLVER : TypeResolver = new DefaultResolver();\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\t#if !neko\n\tstatic var CODES = null;\n\n\tstatic function initCodes() {\n\t\tvar codes =\n\t\t\t#if flash\n\t\t\t\tnew flash.utils.ByteArray();\n\t\t\t#else\n\t\t\t\tnew Array();\n\t\t\t#end\n\t\tfor( i in 0...BASE64.length )\n\t\t\tcodes[StringTools.fastCodeAt(BASE64,i)] = i;\n\t\treturn codes;\n\t}\n\t#end\n\n \tvar buf : String;\n \tvar pos : Int;\n \tvar length : Int;\n \tvar cache : Array<Dynamic>;\n \tvar scache : Array<String>;\n \tvar resolver : TypeResolver;\n \t#if neko\n \tvar upos : Int;\n \t#end\n\n\t/**\n\t\tCreates a new Unserializer instance, with its internal buffer\n\t\tinitialized to `buf`.\n\n\t\tThis does not parse `buf` immediately. It is parsed only when calls to\n\t\t`this.unserialize` are made.\n\n\t\tEach Unserializer instance maintains its own cache.\n\t**/\n \tpublic function new( buf : String ) {\n \t\tthis.buf = buf;\n \t\tlength = buf.length;\n \t\tpos = 0;\n \t\t#if neko\n \t\tupos = 0;\n \t\t#end\n \t\tscache = new Array();\n \t\tcache = new Array();\n\t\tvar r = DEFAULT_RESOLVER;\n\t\tif( r == null ) {\n\t\t\tr = new DefaultResolver();\n\t\t\tDEFAULT_RESOLVER = r;\n\t\t}\n\t\tresolver = r;\n \t}\n\n\t/**\n\t\tSets the type resolver of `this` Unserializer instance to `r`.\n\n\t\tIf `r` is null, a special resolver is used which returns null for all\n\t\tinput values.\n\n\t\tSee `DEFAULT_RESOLVER` for more information on type resolvers.\n\t**/\n \tpublic function setResolver( r ) {\n\t\tif( r == null )\n\t\t\tresolver = NullResolver.instance;\n\t\telse\n\t\t\tresolver = r;\n\t}\n\n\t/**\n\t\tGets the type resolver of `this` Unserializer instance.\n\n\t\tSee `DEFAULT_RESOLVER` for more information on type resolvers.\n\t**/\n \tpublic function getResolver() {\n\t\treturn resolver;\n\t}\n\n\tinline function get(p) : Int {\n\t\treturn StringTools.fastCodeAt(buf, p);\n\t}\n\n \tfunction readDigits() {\n \t\tvar k = 0;\n \t\tvar s = false;\n \t\tvar fpos = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n\t\t\tif( StringTools.isEof(c) )\n\t\t\t\tbreak;\n \t\t\tif( c == \"-\".code ) {\n \t\t\t\tif( pos != fpos )\n \t\t\t\t\tbreak;\n \t\t\t\ts = true;\n \t\t\t\tpos++;\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tif( c < \"0\".code || c > \"9\".code )\n \t\t\t\tbreak;\n \t\t\tk = k * 10 + (c - \"0\".code);\n \t\t\tpos++;\n \t\t}\n \t\tif( s )\n \t\t\tk *= -1;\n \t\treturn k;\n \t}\n\n\tfunction readFloat() {\n\t\tvar p1 = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n\t\t\tif( StringTools.isEof(c)) break;\n \t\t\t// + - . , 0-9\n \t\t\tif( (c >= 43 && c < 58) || c == \"e\".code || c == \"E\".code )\n \t\t\t\tpos++;\n \t\t\telse\n \t\t\t\tbreak;\n \t\t}\n \t\treturn Std.parseFloat(buf.substr(p1,pos-p1));\n\t}\n\n\tfunction unserializeObject(o) {\n \t\twhile( true ) {\n \t\t\tif( pos >= length )\n \t\t\t\tthrow \"Invalid object\";\n \t\t\tif( get(pos) == \"g\".code )\n \t\t\t\tbreak;\n \t\t\tvar k = unserialize();\n \t\t\tif( !Std.is(k,String) )\n \t\t\t\tthrow \"Invalid object key\";\n \t\t\tvar v = unserialize();\n \t\t\tReflect.setField(o,k,v);\n \t\t}\n \t\tpos++;\n\t}\n\n\tfunction unserializeEnum( edecl, tag ) {\n\t\tif( get(pos++) != \":\".code )\n\t\t\tthrow \"Invalid enum format\";\n\t\tvar nargs = readDigits();\n\t\tif( nargs == 0 )\n\t\t\treturn Type.createEnum(edecl,tag);\n\t\tvar args = new Array();\n\t\twhile( nargs-- > 0 )\n\t\t\targs.push(unserialize());\n\t\treturn Type.createEnum(edecl,tag,args);\n\t}\n\n\t/**\n\t\tUnserializes the next part of `this` Unserializer instance and returns\n\t\tthe according value.\n\n\t\tThis function may call `this.resolver.resolveClass` to determine a\n\t\tClass from a String, and `this.resolver.resolveEnum` to determine an\n\t\tEnum from a String.\n\n\t\tIf `this` Unserializer instance contains no more or invalid data, an\n\t\texception is thrown.\n\n\t\tThis operation may fail on structurally valid data if a type cannot be\n\t\tresolved or if a field cannot be set. This can happen when unserializing\n\t\tStrings that were serialized on a different Haxe target, in which the\n\t\tserialization side has to make sure not to include platform-specific\n\t\tdata.\n\n\t\tClasses are created from `Type.createEmptyInstance`, which means their\n\t\tconstructors are not called.\n\t**/\n \tpublic function unserialize() : Dynamic {\n \t\tswitch( get(pos++) ) {\n \t\tcase \"n\".code:\n \t\t\treturn null;\n \t\tcase \"t\".code:\n \t\t\treturn true;\n \t\tcase \"f\".code:\n \t\t\treturn false;\n \t\tcase \"z\".code:\n \t\t\treturn 0;\n \t\tcase \"i\".code:\n \t\t\treturn readDigits();\n \t\tcase \"d\".code:\n \t\t\treturn readFloat();\n\t\tcase \"y\".code:\n \t\t\tvar len = readDigits();\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n \t\t\t\tthrow \"Invalid string length\";\n\t\t\tvar s = buf.substr(pos,len);\n\t\t\tpos += len;\n\t\t\ts = StringTools.urlDecode(s);\n\t\t\tscache.push(s);\n\t\t\treturn s;\n \t\tcase \"k\".code:\n \t\t\treturn Math.NaN;\n \t\tcase \"m\".code:\n \t\t\treturn Math.NEGATIVE_INFINITY;\n \t\tcase \"p\".code:\n \t\t\treturn Math.POSITIVE_INFINITY;\n \t\tcase \"a\".code:\n\t\t\tvar buf = buf;\n \t\t\tvar a = new Array<Dynamic>();\n \t\t\t#if cpp var cachePos = cache.length; #end\n \t\t\tcache.push(a);\n \t\t\twhile( true ) {\n \t\t\t\tvar c = get(pos);\n \t\t\t\tif( c == \"h\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tbreak;\n\t\t\t\t}\n \t\t\t\tif( c == \"u\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tvar n = readDigits();\n \t\t\t\t\ta[a.length+n-1] = null;\n \t\t\t\t} else\n \t\t\t\t\ta.push(unserialize());\n \t\t\t}\n \t\t\t#if cpp\n \t\t\treturn cache[cachePos] = cpp.NativeArray.resolveVirtualArray(a);\n \t\t\t#else\n \t\t\treturn a;\n \t\t\t#end\n \t\tcase \"o\".code:\n\t \t\tvar o = {};\n\t \t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n \t\tcase \"r\".code:\n \t\t\tvar n = readDigits();\n \t\t\tif( n < 0 || n >= cache.length )\n \t\t\t\tthrow \"Invalid reference\";\n \t\t\treturn cache[n];\n \t\tcase \"R\".code:\n\t\t\tvar n = readDigits();\n\t\t\tif( n < 0 || n >= scache.length )\n\t\t\t\tthrow \"Invalid string reference\";\n\t\t\treturn scache[n];\n \t\tcase \"x\".code:\n\t\t\tthrow unserialize();\n\t\tcase \"c\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n\t\tcase \"w\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tvar e = unserializeEnum(edecl, unserialize());\n\t\t\tcache.push(e);\n\t\t\treturn e;\n \t\tcase \"j\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tpos++; /* skip ':' */\n\t\t\tvar index = readDigits();\n\t\t\tvar tag = Type.getEnumConstructs(edecl)[index];\n\t\t\tif( tag == null )\n\t\t\t\tthrow \"Unknown enum index \"+name+\"@\"+index;\n\t\t\tvar e = unserializeEnum(edecl, tag);\n\t\t\tcache.push(e);\n\t\t\treturn e;\n\t\tcase \"l\".code:\n\t\t\tvar l = new List();\n\t\t\tcache.push(l);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code )\n\t\t\t\tl.add(unserialize());\n\t\t\tpos++;\n\t\t\treturn l;\n\t\tcase \"b\".code:\n\t\t\tvar h = new haxe.ds.StringMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"q\".code:\n\t\t\tvar h = new haxe.ds.IntMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\tvar c = get(pos++);\n\t\t\twhile( c == \":\".code ) {\n\t\t\t\tvar i = readDigits();\n\t\t\t\th.set(i,unserialize());\n\t\t\t\tc = get(pos++);\n\t\t\t}\n\t\t\tif( c != \"h\".code )\n\t\t\t\tthrow \"Invalid IntMap format\";\n\t\t\treturn h;\n\t\tcase \"M\".code:\n\t\t\tvar h = new haxe.ds.ObjectMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"v\".code:\n\t\t\tvar d;\n\t\t\tif(\tget(pos) >= '0'.code && get(pos) <= '9'.code &&\n\t\t\t\tget(pos + 1) >= '0'.code && get(pos + 1) <= '9'.code &&\n\t\t\t\tget(pos + 2) >= '0'.code && get(pos + 2) <= '9'.code &&\n\t\t\t\tget(pos + 3) >= '0'.code && get(pos + 3) <= '9'.code &&\n\t\t\t\tget(pos + 4) == '-'.code\n\t\t\t\t) {\n\t\t\t\t// Included for backwards compatibility\n\t\t\t\td = Date.fromString(buf.substr(pos,19));\n\t\t\t\tpos += 19;\n\t\t\t} else\n\t\t\t\td = Date.fromTime(readFloat());\n\t\t\tcache.push(d);\n\t\t\treturn d;\n \t\tcase \"s\".code:\n \t\t\tvar len = readDigits();\n\t\t\tvar buf = buf;\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n\t\t\t\tthrow \"Invalid bytes length\";\n\t\t\t#if neko\n\t\t\tvar bytes = haxe.io.Bytes.ofData( base_decode(untyped buf.substr(pos,len).__s,untyped BASE64.__s) );\n\t\t\t#else\n\t\t\tvar codes = CODES;\n\t\t\tif( codes == null ) {\n\t\t\t\tcodes = initCodes();\n\t\t\t\tCODES = codes;\n\t\t\t}\n\t\t\tvar i = pos;\n\t\t\tvar rest = len & 3;\n\t\t\tvar size = (len >> 2) * 3 + ((rest >= 2) ? rest - 1 : 0);\n\t\t\tvar max = i + (len - rest);\n\t\t\tvar bytes = haxe.io.Bytes.alloc(size);\n\t\t\tvar bpos = 0;\n\t\t\twhile( i < max ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\tvar c4 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c3 << 6) | c4);\n\t\t\t}\n\t\t\tif( rest >= 2 ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tif( rest == 3 ) {\n\t\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\t}\n\t\t\t}\n \t\t\t#end\n\t\t\tpos += len;\n\t\t\tcache.push(bytes);\n\t\t\treturn bytes;\n\t\tcase \"C\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o : Dynamic = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\to.hxUnserialize(this);\n\t\t\tif( get(pos++) != \"g\".code )\n\t\t\t\tthrow \"Invalid custom data\";\n\t\t\treturn o;\n\t\tcase \"A\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\treturn cl;\n\t\tcase \"B\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar e = resolver.resolveEnum(name);\n\t\t\tif( e == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\treturn e;\n \t\tdefault:\n \t\t}\n \t\tpos--;\n \t\tthrow (\"Invalid char \"+buf.charAt(pos)+\" at position \"+pos);\n \t}\n\n\t/**\n\t\tUnserializes `v` and returns the according value.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tUnserializer with `v` as buffer and calling its unserialize() method\n\t\tonce.\n\t**/\n\tpublic static function run( v : String ) : Dynamic {\n\t\treturn new Unserializer(v).unserialize();\n\t}\n\n\t#if neko\n\tstatic var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n\n}\n\nprivate class DefaultResolver {\n\tpublic function new() {}\n\t@:final public inline function resolveClass(name:String):Class<Dynamic> return Type.resolveClass(name);\n\t@:final public inline function resolveEnum(name:String):Enum<Dynamic> return Type.resolveEnum(name);\n}\n\nprivate class NullResolver {\n\tfunction new() {}\n\t@:final public inline function resolveClass(name:String):Class<Dynamic> return null;\n\t@:final public inline function resolveEnum(name:String):Enum<Dynamic> return null;\n\tpublic static var instance(get,null):NullResolver;\n\tinline static function get_instance():NullResolver {\n\t\tif (instance == null) instance = new NullResolver();\n\t\treturn instance;\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic inline function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic inline function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic inline function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for( var key in {0} ) {1}\", h, if( h.hasOwnProperty(key) ) a.push(key|0));\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements haxe.Constraints.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { __keys__: {} };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = getId(key) || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length-1 )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n#if !nodejs\nimport js.html.compat.Uint8Array;\nimport js.html.compat.DataView;\n#end\n\n@:coreApi\nclass Bytes {\n\n\tpublic var length(default,null) : Int;\n\tvar b : js.html.Uint8Array;\n\tvar data : js.html.DataView;\n\n\tfunction new(data:BytesData) {\n\t\tthis.length = data.byteLength;\n\t\tthis.b = new js.html.Uint8Array(data);\n\t\tuntyped {\n\t\t\tb.bufferValue = data; // some impl does not return the same instance in .buffer\n\t\t\tdata.hxBytes = this;\n\t\t\tdata.bytes = this.b;\n\t\t}\n\t}\n\n\tpublic inline function get( pos : Int ) : Int {\n\t\treturn b[pos];\n\t}\n\n\tpublic inline function set( pos : Int, v : Int ) : Void {\n\t\tb[pos] = v & 0xFF; // the &0xFF is necessary for js.html.compat support\n\t}\n\n\tpublic function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {\n\t\tif( pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length ) throw Error.OutsideBounds;\n\t\tif( srcpos == 0 && len == src.b.byteLength )\n\t\t\tb.set(src.b,pos);\n\t\telse\n\t\t\tb.set(src.b.subarray(srcpos,srcpos+len),pos);\n\t}\n\n\tpublic function fill( pos : Int, len : Int, value : Int ) : Void {\n\t\tfor( i in 0...len )\n\t\t\tset(pos++, value);\n\t}\n\n\tpublic function sub( pos : Int, len : Int ) : Bytes {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\treturn new Bytes(b.buffer.slice(pos+b.byteOffset,pos+b.byteOffset+len));\n\t}\n\n\tpublic function compare( other : Bytes ) : Int {\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor( i in 0...len )\n\t\t\tif( b1[i] != b2[i] )\n\t\t\t\treturn b1[i] - b2[i];\n\t\treturn length - other.length;\n\t}\n\n\tinline function initData() : Void {\n\t\tif( data == null ) data = new js.html.DataView(b.buffer, b.byteOffset, b.byteLength);\n\t}\n\n\tpublic function getDouble( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat64(pos, true);\n\t}\n\n\tpublic function getFloat( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat32(pos, true);\n\t}\n\n\tpublic function setDouble( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat64(pos, v, true);\n\t}\n\n\tpublic function setFloat( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat32(pos, v, true);\n\t}\n\n\tpublic function getUInt16( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getUint16(pos, true);\n\t}\n\n\tpublic function setUInt16( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setUint16(pos, v, true);\n\t}\n\n\tpublic function getInt32( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getInt32(pos, true);\n\t}\n\n\tpublic function setInt32( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setInt32(pos, v, true);\n\t}\n\n\tpublic function getInt64( pos : Int ) : haxe.Int64 {\n\t\treturn Int64.make(getInt32(pos + 4),getInt32(pos));\n\t}\n\n\tpublic function setInt64( pos : Int, v : haxe.Int64 ) : Void {\n\t\tsetInt32(pos, v.low);\n\t\tsetInt32(pos + 4, v.high);\n\t}\n\n\tpublic function getString( pos : Int, len : Int ) : String {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar fcc = String.fromCharCode;\n\t\tvar i = pos;\n\t\tvar max = pos+len;\n\t\t// utf8-decode and utf16-encode\n\t\twhile( i < max ) {\n\t\t\tvar c = b[i++];\n\t\t\tif( c < 0x80 ) {\n\t\t\t\tif( c == 0 ) break;\n\t\t\t\ts += fcc(c);\n\t\t\t} else if( c < 0xE0 )\n\t\t\t\ts += fcc( ((c & 0x3F) << 6) | (b[i++] & 0x7F) );\n\t\t\telse if( c < 0xF0 ) {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\ts += fcc( ((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F) );\n\t\t\t} else {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\tvar c3 = b[i++];\n\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t// surrogate pair\n\t\t\t\ts += fcc( (u >> 10) + 0xD7C0 );\n\t\t\t\ts += fcc( (u & 0x3FF) | 0xDC00 );\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString() : String {\n\t\treturn getString(0,length);\n\t}\n\n\tpublic function toHex() : String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor( i in 0...str.length )\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor( i in 0...length ) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData() : BytesData {\n\t\treturn untyped b.bufferValue;\n\t}\n\n\tpublic static inline function alloc( length : Int ) : Bytes {\n\t\treturn new Bytes(new BytesData(length));\n\t}\n\n\tpublic static function ofString( s : String ) : Bytes {\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile( i < s.length ) {\n\t\t\tvar c : Int = StringTools.fastCodeAt(s,i++);\n\t\t\t// surrogate pair\n\t\t\tif( 0xD800 <= c && c <= 0xDBFF )\n\t\t\t    c = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s,i++) & 0x3FF);\n\t\t\tif( c <= 0x7F )\n\t\t\t\ta.push(c);\n\t\t\telse if( c <= 0x7FF ) {\n\t\t\t\ta.push( 0xC0 | (c >> 6) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\ta.push( 0xE0 | (c >> 12) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else {\n\t\t\t\ta.push( 0xF0 | (c >> 18) );\n\t\t\t\ta.push( 0x80 | ((c >> 12) & 63) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(new js.html.Uint8Array(a).buffer);\n\t}\n\n\tpublic static function ofData( b : BytesData ) : Bytes {\n\t\tvar hb = untyped b.hxBytes;\n\t\tif( hb != null ) return hb;\n\t\treturn new Bytes(b);\n\t}\n\n\tpublic inline static function fastGet( b : BytesData, pos : Int ) : Int {\n\t\t// this requires that we have wrapped it with haxe.io.Bytes beforehand\n\t\treturn untyped b.bytes[pos];\n\t}\n\n}\n","package haxecontracts;\r\nimport haxe.CallStack;\r\nimport haxe.PosInfos;\r\n\r\nclass ContractException\r\n{\r\n\tpublic var message(default, null) : String;\r\n\tpublic var object(default, null) : Dynamic;\r\n\tpublic var arguments(default, null) : Array<Dynamic>;\r\n\tpublic var pos(default, null) : PosInfos;\r\n\tpublic var callStack(default, null) : Array<StackItem>;\r\n\tpublic var innerException(default, null) : Null<Dynamic>;\r\n\r\n\tpublic function new(message = \"\", object : Dynamic = null, arguments : Array<Dynamic> = null, ?innerException : Dynamic, ?p : PosInfos)\r\n\t{\r\n\t\tthis.message = message;\r\n\t\tthis.object = object;\r\n\t\tthis.arguments = arguments == null ? [] : arguments;\r\n\t\tthis.pos = p;\r\n\t\tthis.callStack = [];\r\n\t\tthis.innerException = innerException;\r\n\t\t\r\n\t\tfor (s in CallStack.callStack()) switch s {\r\n\t\t\tcase FilePos(_, file, _) if (file != \"haxecontracts/ContractException.hx\"):\r\n\t\t\t\tcallStack.push(s);\r\n\t\t\tcase _:\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function toString()\r\n\t{\r\n\t\tvar innerEx = innerException == null ? \"\" : ': ' + Std.string(innerException);\r\n\t\treturn message + \r\n\t\t\t' (${pos.fileName}:${pos.lineNumber}$innerEx) ' + \r\n\t\t\tStd.string(arguments) + \r\n\t\t\t(object != null ? \" \" + Std.string(object) : \"\");\r\n\t}\r\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n\n\tpublic static function wrap(val:Dynamic):Dynamic untyped {\n\t\treturn if (__instanceof__(val, js.Error)) val else new HaxeError(val);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\" && untyped __js__(\"(o|0) === o\");\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped ({}).toString;\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn untyped js.Lib.global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\t/** The global window object. */\n\tpublic static var window(get, never):js.html.Window;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\t/** Shortcut to Window.document. */\n\tpublic static var document(get, never):js.html.HTMLDocument;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\t/** Shortcut to Window.location. */\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\t/** Shortcut to Window.navigator. */\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/** Shortcut to Window.console. */\n\tpublic static var console(get, never):js.html.Console;\n\tinline static function get_console() return untyped __js__(\"window.console\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tinline static function get_supported() return untyped __typeof__(window) != \"undefined\";\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message. See also `Window.alert()`.\n\t**/\n\tpublic static function alert( v : Dynamic ) {\n\t\t@:privateAccess window.alert(Boot.__string_rec(v,\"\"));\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\n@:ifFeature(\"js.html.ArrayBuffer.*\")\nclass ArrayBuffer {\n\n\tpublic var byteLength : Int;\n\tvar a : Array<Int>;\n\n\tpublic function new( ?a : Dynamic ) {\n\t\tif( Std.is(a,Array) ) {\n\t\t\tthis.a = a;\n\t\t\tbyteLength = a.length;\n\t\t} else {\n\t\t\tvar len : Int = a;\n\t\t\tthis.a = [];\n\t\t\tfor( i in 0...len )\n\t\t\t\tthis.a[i] = 0;\n\t\t\tbyteLength = len;\n\t\t}\n\t}\n\n\tpublic function slice(begin,?end) {\n\t\treturn new ArrayBuffer(a.slice(begin,end));\n\t}\n\n\tstatic function sliceImpl(begin,?end) {\n\t\tvar u = new js.html.Uint8Array(js.Lib.nativeThis, begin, end == null ? null : end - begin);\n\t\tvar result = new js.html.ArrayBuffer(u.byteLength);\n\t\tvar resultArray = new js.html.Uint8Array(result);\n\t\tresultArray.set(u);\n\t\treturn result;\n\t}\n\n\tstatic function __init__() untyped {\n\t\tvar ArrayBuffer = js.Lib.global.ArrayBuffer || js.html.compat.ArrayBuffer;\n\t\tif( ArrayBuffer.prototype.slice == null ) ArrayBuffer.prototype.slice = sliceImpl; // IE10\n\t}\n}\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\nimport js.Lib.nativeThis;\n\n@:ifFeature(\"js.html.Uint8Array.*\")\nclass Uint8Array {\n\n\tstatic var BYTES_PER_ELEMENT = 1;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) : Dynamic {\n\t\tvar arr;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = buffer.byteLength - offset;\n\t\t\tif( offset == 0 )\n\t\t\t\tarr = cast @:privateAccess buffer.a;\n\t\t\telse\n\t\t\t\t// here we are losing the fact that we should reference the same data,\n\t\t\t\t// but I don't see another way to have this behaviour while keeping [] access\n\t\t\t\tarr = cast @:privateAccess buffer.a.slice(offset, offset+length);\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Int>).copy();\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO \"+arg1;\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar a = _new(nativeThis.slice(start,end));\n\t\ta.byteOffset = start;\n\t\treturn a;\n\t}\n\n\tstatic function __init__() {\n\t\tvar Uint8Array = untyped js.Lib.global.Uint8Array || _new;\n\t}\n\n}\n#end","package mithril;\r\n\r\nusing Lambda;\r\nusing StringTools;\r\n\r\nimport haxe.Constraints.Function;\r\nimport haxe.DynamicAccess;\r\n\r\n#if js\r\nimport js.Browser;\r\nimport js.Promise;\r\nimport js.Error;\r\nimport js.html.Document;\r\nimport js.html.Event;\r\nimport js.html.XMLHttpRequest;\r\nimport js.html.DOMElement in Element;\r\n#else\r\n// Mock some js classes for server rendering\r\ntypedef XMLHttpRequest = Dynamic;\r\ntypedef Event = Dynamic;\r\ntypedef Promise<T> = Dynamic;\r\n#end\r\n\r\n/////////////////////////////////////////////////////////////\r\n\r\nprivate abstract Either<T1, T2>(Dynamic)\r\nfrom T1 from T2 to T1 to T2 {}\r\n\r\n///// Interfaces /////\r\n\r\n@:autoBuild(mithril.macros.ModuleBuilder.build()) interface Mithril {}\r\n\r\n///// Typedefs /////\r\n\r\nprivate typedef Component1 = {\r\n\tfunction view() : Vnodes;\r\n};\r\n\r\nprivate typedef Component2 = {\r\n\tfunction view(vnode : Vnode<Dynamic>) : Vnodes;\r\n};\r\n\r\ntypedef Component = Either<Component1, Component2>;\r\n\r\ntypedef RouteResolver<T : Component> = {\r\n\t@:optional function onmatch(args : DynamicAccess<String>, requestedPath : String) : Either<T, Promise<T>>;\r\n\t@:optional function render(vnode : Null<Vnode<T>>) : Vnodes;\r\n}\r\n\r\ntypedef Vnode<T> = {\r\n\tvar state : Null<T>;\r\n\tvar tag : Dynamic;\r\n\tvar key : Null<String>;\r\n\tvar attrs : Null<DynamicAccess<Dynamic>>;\r\n\tvar children : Null<Array<Vnode<Dynamic>>>;\t\r\n\tvar text : Null<Dynamic>;\r\n\t#if js\r\n\tvar dom : Null<Element>;\r\n\t#else\r\n\tvar dom : Null<Dynamic>;\r\n\t#end\r\n\tvar domSize : Null<Int>;\r\n};\r\n\r\ntypedef Vnodes = Either<Vnode<Dynamic>, Array<Vnode<Dynamic>>>;\r\n\r\n/**\r\n * Plenty of optional fields for this one.\r\n * @see http://mithril.js.org/request.html\r\n */\r\ntypedef XHROptions<T, T2, T3> = {\r\n\t@:optional var url : String;\r\n\t@:optional var method : String;\r\n\t@:optional var data : Dynamic;\r\n\t@:optional var async : Bool;\r\n\t@:optional var user : String;\r\n\t@:optional var password : String;\r\n\t@:optional var withCredentials : Bool;\r\n\t@:optional var config : XMLHttpRequest -> XMLHttpRequest;\r\n\t@:optional var headers : DynamicAccess<String>;\r\n\t@:optional var type : T -> Dynamic;\r\n\t@:optional var serialize : T3 -> String;\r\n\t@:optional var deserialize : String -> T3;\r\n\t@:optional var extract : XMLHttpRequest -> XHROptions<T, T2, T3> -> String;\r\n\t@:optional var useBody : Bool;\r\n\t@:optional var background : Bool;\r\n};\r\n\r\ntypedef JSONPOptions<T, T2> = {\r\n\t@:optional var url : String;\r\n\t@:optional var data : Dynamic;\r\n\t@:optional var type : T -> Dynamic;\r\n\t@:optional var callbackName : String;\r\n\t@:optional var callbackKey : String;\r\n};\r\n\r\n//////////\r\n\r\n#if ((js && !nodejs) || (js && nodejs && mithril_native))\r\n@:final @:native(\"m\")\r\nextern class M\r\n{\r\n\t@:overload(function(selector : Either<String, Component>) : Vnodes {})\r\n\t@:overload(function(selector : Either<String, Component>, attributes : Dynamic) : Vnodes {})\r\n\tpublic static function m(selector : Either<String, Component>, attributes : Dynamic, children : Dynamic) : Vnodes;\r\n\r\n\tpublic static function render(rootElement : Element, children : Vnodes) : Void;\r\n\t\r\n\tpublic static function mount(element : Element, component : Null<Component>) : Void;\r\n\r\n\tpublic static function route(rootElement : Element, defaultRoute : String, routes : Dynamic<Either<Component, RouteResolver<Dynamic>>>) : Void;\r\n\t\r\n\t///// Special route accessors /////\r\n\t\r\n\tpublic static inline function routeSet(route : String, ?data : { }, ?options : {\r\n\t\t?replace : Bool,\r\n\t\t?state : { },\r\n\t\t?title : String\r\n\t}) : Void { \r\n\t\treturn untyped __js__(\"m.route.set({0}, {1}, {2})\", route, data, options); \t\t\r\n\t}\r\n\tpublic static inline function routeGet() : String  { return untyped __js__(\"m.route.get()\"); }\r\n\tpublic static inline function routePrefix(prefix : String) : Void  { return untyped __js__(\"m.route.prefix({0})\", prefix); }\r\n\tpublic static inline function routeLink(vnode : Vnode<Dynamic>) : Event -> Void { return untyped __js__(\"m.route.link({0})\", vnode); }\r\n\t\r\n\t// Convenience method for route attributes\r\n\tpublic static inline function routeAttrs(vnode : Vnode<Dynamic>) : DynamicAccess<String> { return untyped __js__(\"{0}.attrs\", vnode); }\r\n\t\r\n\t///////////////////////////////////\r\n\t\r\n\t#if !nodejs\r\n\t@:overload(function<T, T2, T3>(url : String) : Promise<T> {})\r\n\t@:overload(function<T, T2, T3>(options : XHROptions<T, T2, T3>) : Promise<T> {})\r\n\tpublic static function request<T, T2, T3>(url : String, options : XHROptions<T, T2, T3>) : Promise<T>;\r\n\r\n\t@:overload(function<T>(url : String) : Promise<T> {})\r\n\t@:overload(function<T, T2>(options : JSONPOptions<T, T2>) : Promise<T> {})\r\n\tpublic static function jsonp<T, T2>(url : String, options : JSONPOptions<T, T2>) : Promise<T>;\r\n\t#end\r\n\r\n\tpublic static function parseQueryString(querystring : String) : DynamicAccess<String>;\r\n\tpublic static function buildQueryString(data : {}) : String;\r\n\t\r\n\tpublic static function withAttr<T, T2 : Event>(attrName : String, callback : T -> Void) : T2 -> Void;\r\n\t\r\n\tpublic static function trust(html : String) : Vnode<Dynamic>;\r\n\t\r\n\tpublic static function fragment(attrs : {}, children : Array<Vnodes>) : Vnode<Dynamic>;\r\n\r\n\tpublic static function redraw() : Void;\r\n\t\r\n\tpublic static function version() : String;\r\n\t\r\n\t///// Haxe specific stuff /////\r\n\r\n\tstatic function __init__() : Void {\r\n\t\t// Hacking time! For patching window.m and the Node module.\r\n\t\t// Pass a property of window with the same value as the @:native metadata\r\n\t\t// to the inline function. It will be replaced with the var name.\r\n\t\tuntyped __js__(\"try {\");\r\n\t\t_patch(untyped Browser.window.m);\r\n\t\tuntyped __js__(\"} catch(_) {}\");\r\n\t\t// Node patch\r\n\t\tuntyped __js__(\"try {\");\r\n\t\tuntyped __js__('GLOBAL.m = require(\"mithril\")');\r\n\t\t_patch(untyped __js__('GLOBAL.m'));\r\n\t\tuntyped __js__(\"} catch(_) {}\");\r\n\t}\r\n\r\n\t@:noCompletion public static inline function _patch(__varName : Dynamic) : Void {\r\n\t\t// Add m.m which simplifies the API.\r\n\t\t// It also prevents deferred being resolved on Node.js to avoid server rendering issues,\r\n\t\t// and converts List to Array so Lambda.map can be used conveniently.\r\n\t\t//\r\n\t\t// if (typeof module !== 'undefined' && module.exports) m.request = function(args, extra) { return new Promise(function(res, rej) {}); };\r\n\t\tuntyped __js__(\"(function(m) {\r\n\t\t\tif (m.m) return;\r\n\t\t\tm.m = function() {\r\n\t\t\t\ttry { \r\n\t\t\t\t\tfor(var i=0; i < arguments.length; ++i) if(arguments[i] instanceof List) {\r\n\t\t\t\t\t\tvar list = arguments[i].h; arguments[i] = [];\r\n\t\t\t\t\t\twhile(list != null) { arguments[i].push(l[0]); list = l[1]; }\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(e) {}\r\n\t\t\t\treturn m.apply(this, arguments);\r\n\t\t\t}\r\n\t\t})\")(__varName);\r\n\t}\r\n}\r\n#else\r\n\r\n///// Cross-platform implementation of Mithril. /////\r\n\r\n@:final\r\nclass M \r\n{\r\n\t///// Stubs /////\r\n\t\r\n\tpublic static function redraw(?forceSync : Bool) {}\r\n\r\n\tpublic static function withAttr<T, T2 : Event>(property : String, ?callback : T -> Void) : T2 -> Void {\r\n\t\treturn function(e) {}\r\n\t}\r\n\t\r\n\tpublic static var routeLink(default, null) : Function = null;\r\n\t\r\n\t///// Rendering /////\r\n\t\r\n\tpublic static function m(selector : String, ?attrs : Dynamic, ?children : Dynamic) : Vnode<Dynamic> {\r\n\t\tif (selector == null || !Std.is(selector, String) && Reflect.hasField(selector, \"view\")) {\r\n\t\t\tthrow \"The selector must be either a string or a component.\";\r\n\t\t}\r\n\t\t\r\n\t\t//trace(\"=== \" + selector);\r\n\t\t\r\n\t\tif (Std.is(selector, String) && !selectorCache.exists(selector)) {\r\n\t\t\tvar tag : String = null, classes : Array<String> = [];\r\n\t\t\tvar attributes : DynamicAccess<Dynamic> = {}, tempSelector = selector;\r\n\t\t\t\r\n\t\t\twhile (selectorParser.match(tempSelector)) {\r\n\t\t\t\tvar matched = selectorParser.matched;\r\n\t\t\t\tvar type = matched(1), value = matched(2);\r\n\t\t\t\tif (type == \"\" && value != \"\") tag = value;\r\n\t\t\t\telse if (type == \"#\") attributes.set('id', value);\r\n\t\t\t\telse if (type == \".\") classes.push(value);\r\n\t\t\t\telse if (matched(3).charAt(0) == \"[\") {\r\n\t\t\t\t\tvar attrValue = matched(6);\r\n\t\t\t\t\tif (attrValue != null) {\r\n\t\t\t\t\t\tattrValue = ~/\\\\([\"'])/g.replace(attrValue, \"$1\");\r\n\t\t\t\t\t\tattrValue = ~/\\\\\\\\/g.replace(attrValue, \"\\\\\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif (matched(4) == \"class\") \r\n\t\t\t\t\t\tclasses.push(attrValue);\r\n\t\t\t\t\telse \r\n\t\t\t\t\t\tattributes.set(matched(4), attrValue == null ? true : attrValue);\r\n\t\t\t\t}\r\n\t\t\t\ttempSelector = selectorParser.matchedRight();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (classes.length > 0) \r\n\t\t\t\tattributes.set('className', classes.join(\" \"));\r\n\t\t\t\r\n\t\t\tselectorCache[selector] = function(attrs : DynamicAccess<Dynamic>, children) {\r\n\t\t\t\tvar hasAttrs = false, childList : Array<Vnode<Dynamic>> = null, text : String = null;\r\n\t\t\t\t\r\n\t\t\t\tvar className = if (attrs.exists(\"className\") && attrs.get(\"className\") != null && cast(attrs.get(\"className\"), String).length > 0)\r\n\t\t\t\t\tattrs.get(\"className\")\r\n\t\t\t\telse if (attrs.exists(\"class\") && attrs.get(\"class\") != null && cast(attrs.get(\"class\"), String).length > 0)\r\n\t\t\t\t\tattrs.get(\"class\")\r\n\t\t\t\telse\r\n\t\t\t\t\tnull;\r\n\t\t\t\t\r\n\t\t\t\tfor (key in attributes.keys()) attrs.set(key, attributes.get(key));\r\n\t\t\t\t\r\n\t\t\t\tif (className != null) {\r\n\t\t\t\t\tif (attrs.get(\"class\") != null) {\r\n\t\t\t\t\t\t#if python\r\n\t\t\t\t\t\t// Cannot delete \"class\" field on python\r\n\t\t\t\t\t\tvar newAttrs: DynamicAccess<Dynamic> = {};\r\n\t\t\t\t\t\tfor (key in attrs.keys()) if (key != 'class') \r\n\t\t\t\t\t\t\tnewAttrs.set(key, attrs.get(key));\r\n\t\t\t\t\t\tattrs = newAttrs;\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\tattrs.remove(\"class\");\r\n\t\t\t\t\t\t#end\r\n\t\t\t\t\t\tattrs.set(\"className\", className);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (attributes.get(\"className\") != null) {\r\n\t\t\t\t\t\tattrs.set(\"className\", attributes.get(\"className\") + \" \" + className);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (key in attrs.keys()) if (key != \"key\") {\r\n\t\t\t\t\thasAttrs = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar childArray : Array<Vnode<Dynamic>> = Std.is(children, Array) ? cast children : null;\r\n\t\t\t\t\r\n\t\t\t\t//trace(\"selectorCache[\" + selector + \"] childArray:\"); trace(childArray);\r\n\t\t\t\t\r\n\t\t\t\tif (childArray != null && childArray.length == 1 && \r\n\t\t\t\t\tchildArray[0] != null && Reflect.hasField(childArray[0], \"tag\") && Reflect.field(childArray[0], \"tag\") == \"#\"\r\n\t\t\t\t) {\r\n\t\t\t\t\t//trace(\"setting text: \"); trace(childArray);\r\n\t\t\t\t\ttext = Std.string(Reflect.field(childArray[0], \"children\"));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//trace(\"assigning childList: \"); trace(children);\r\n\t\t\t\t\tchildList = children;\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t//trace(\"return vnode =====\");\r\n\t\t\t\t\r\n\t\t\t\treturn vnode(tag == null ? \"div\" : tag, attrs.get(\"key\"), hasAttrs ? attrs : null, childList, text, null);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\r\n\t\tvar arguments : Array<Dynamic> = if(attrs == null) [null] else if(children == null) [null, attrs] else [null, attrs, children];\r\n\r\n\t\tvar attrs = { };\r\n\t\tvar childrenIndex = if(\r\n\t\t\t(arguments.length >= 2 && arguments[1] == null) || \r\n\t\t\t!Std.is(arguments[1], String) &&\r\n\t\t\tReflect.isObject(arguments[1]) && \r\n\t\t\t!Reflect.hasField(arguments[1], \"tag\") && \r\n\t\t\t!Std.is(arguments[1], Array)\r\n\t\t) {\r\n\t\t\tattrs = arguments[1];\r\n\t\t\t2;\r\n\t\t}\r\n\t\telse 1;\r\n\t\t\r\n\t\tvar newChildren = if (arguments.length == childrenIndex + 1) {\r\n\t\t\tStd.is(arguments[childrenIndex], Array) ? arguments[childrenIndex] : [arguments[childrenIndex]];\r\n\t\t}\r\n\t\telse {\r\n\t\t\t[for (i in childrenIndex...arguments.length) arguments[i]];\r\n\t\t}\r\n\t\t\r\n\t\t//trace(arguments); trace(attrs);\r\n\t\t\r\n\t\treturn if (Std.is(selector, String)) {\r\n\t\t\t// php cannot call the selector directly\r\n\t\t\tvar cacheFunc = selectorCache[selector];\r\n\t\t\tcacheFunc(attrs, vnodeNormalizeChildren(newChildren));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvnode(\r\n\t\t\t\tselector, \r\n\t\t\t\tReflect.hasField(attrs, \"key\") ? Reflect.field(attrs, \"key\") : null, \r\n\t\t\t\tattrs, vnodeNormalizeChildren(newChildren), null, null\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function trust(html : String) : Vnode<Dynamic> {\r\n\t\t// Implementation differs from native Mithril, html is stored in state instead\r\n\t\t// because of static platform types.\r\n\t\treturn {\r\n\t\t\tstate: html,\r\n\t\t\ttag: \"<\",\r\n\t\t\tkey: null,\r\n\t\t\tattrs: null,\r\n\t\t\tchildren: null,\r\n\t\t\ttext: null,\r\n\t\t\tdom: null,\r\n\t\t\tdomSize: 0\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic var selectorCache = new Map<String, DynamicAccess<Dynamic> -> Dynamic -> Vnode<Dynamic>>();\r\n\t\r\n\tstatic function vnode(tag : Dynamic, key, attrs0, children : Dynamic, text, dom) : Dynamic {\r\n\t\treturn { \r\n\t\t\ttag: tag, key: key, attrs: attrs0, children: children, text: text, \r\n\t\t\tdom: dom, domSize: 0,\r\n\t\t\tstate: {}, events: null, instance: null, skip: false\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tstatic function vnodeNormalize(node : Dynamic) : DynamicAccess<Dynamic> {\r\n\t\treturn if (Std.is(node, Array)) vnode(\"[\", null, null, vnodeNormalizeChildren(node), null, null)\r\n\t\telse if (node != null && !Reflect.isObject(node)) vnode(\"#\", null, null, node == false ? \"\" : node, null, null)\r\n\t\telse node;\r\n\t}\r\n\t\r\n\tstatic function vnodeNormalizeChildren(children : Array<DynamicAccess<Dynamic>>) {\r\n\t\treturn [for (c in children) vnodeNormalize(c)];\r\n\t}\t\r\n\t\t\r\n\tstatic var selectorParser : EReg = new EReg(\"(?:(^|#|\\\\.)([^#\\\\.\\\\[\\\\]]+))|(\\\\[(.+?)(?:\\\\s*=\\\\s*(\\\"|'|)((?:\\\\\\\\[\\\"'\\\\]]|.)*?)\\\\5)?\\\\])\", \"g\");\r\n}\r\n#end\r\n","package webshop;\r\n\r\nimport mithril.M;\r\nimport webshop.models.*;\r\nusing Lambda;\r\n\r\nprivate typedef FormField = {\r\n    var id : String;\r\n    var label : String;\r\n    @:optional var required : Bool; // Default: true\r\n    @:optional var type : String;   // Default: text\r\n    @:optional var width : Int;     // Default: 5 (bootstrap columns)\r\n}\r\n\r\nclass Checkout implements Mithril\r\n{\r\n    var cart : ShoppingCart;\r\n    var checkoutForm : Array<FormField>;\r\n\r\n    public function new(cart) {\r\n        this.cart = cart;\r\n\r\n        this.checkoutForm = [\r\n            {id: \"name\", label: \"Name\"},\r\n            {id: \"address1\", label: \"Address\"},\r\n            {id: \"address1\", label: \"\", required: false},\r\n            {id: \"city\", label: \"City\", width: 4},\r\n            {id: \"zip\", label: \"Zip\", width: 3},\r\n            {id: \"email\", label: \"E-mail\", type: \"email\"}\r\n        ];\r\n    }\r\n\r\n    public function view() return [\r\n        m('h1', \"Checkout\"),\r\n        m('form.form-horizontal[role=form]',  \r\n            checkoutForm.map(formFields).concat([\r\n                m('div.form-group', \r\n                    m('div.col-sm-offset-1.col-sm-5', \r\n                        m('button.btn.btn-success', \"Submit order\")\r\n                    )\r\n                )\r\n            ])\r\n        )\r\n    ];\r\n\r\n    function formFields(f : FormField) {\r\n        var required = f.required != false;\r\n        m('div.form-group', [\r\n            m('label.col-sm-1.control-label', {\"for\": f.id}, f.label + (required ? \"*\" : \"\")),\r\n            m('div', {\"class\": \"col-sm-\" + (f.width == null ? 5 : f.width)}, \r\n                m('input', {\r\n                    \"class\": \"form-control\", \r\n                    required: required,\r\n                    type: f.type == null ? \"text\" : f.type,\r\n                    name: f.id,\r\n                    id: f.id\r\n                })\r\n            )\r\n        ]);\r\n    }\r\n}\r\n","package mithril.macros;\r\n\r\n#if macro\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Type;\r\n\r\nusing haxe.macro.ExprTools;\r\nusing Lambda;\r\nusing StringTools;\r\n\r\nclass ModuleBuilder\r\n{\r\n\tstatic var viewField : Function;\r\n\r\n\t// For javascript:\r\n\t// RouteResolver methods onmatch and render have a correct 'this' reference.\r\n\t// Component hasn't, so methods in this array will be injected with a correct 'this'.\r\n\tstatic var componentMethods = ['view', 'oninit', 'oncreate', 'onbeforeupdate', 'onupdate', 'onbeforeremove', 'onremove'];\r\n\r\n\t@macro public static function build() : Array<Field> {\r\n\t\tvar c : ClassType = Context.getLocalClass().get();\r\n\t\t\r\n\t\tif (c.meta.has(\":MithrilComponentProcessed\")) return null;\r\n\t\tc.meta.add(\":MithrilComponentProcessed\",[],c.pos);\r\n\r\n\t\tvar fields = Context.getBuildFields();\r\n\r\n\t\tfor(field in fields) switch(field.kind) {\r\n\t\t\tcase FFun(f) if(f.expr != null):\r\n\r\n\t\t\t\t// Set viewField if current field is the view function.\r\n\t\t\t\t// Then it will automatically return its content.\r\n\t\t\t\tviewField = if(field.name == \"view\") f else null;\r\n\r\n\t\t\t\treplaceMwithFullNamespace(f.expr);\r\n\t\t\t\treturnLastMExpr(f);\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif (!componentMethods.has(field.name)) continue;\r\n\r\n\t\t\t\t// Keep the field\r\n\t\t\t\tfield.meta.push({\r\n\t\t\t\t\tpos: Context.currentPos(),\r\n\t\t\t\t\tparams: null,\r\n\t\t\t\t\tname: ':keep'\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Add a vnode argument to parameterless component methods\r\n\t\t\t\tif (f.args.length > 0 && f.args[0].type == null) {\r\n\t\t\t\t\tf.args[0].type = TPath({\r\n\t\t\t\t\t\tname: 'M',\r\n\t\t\t\t\t\tpack: ['mithril'],\r\n\t\t\t\t\t\tparams: [TPType(Context.toComplexType(Context.getLocalType()))],\r\n\t\t\t\t\t\tsub: 'Vnode'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(Context.defined('js')) \r\n\t\t\t\t\tinjectCorrectThisReference(field.name, f);\r\n\r\n\t\t\t\t#if (haxe_ver < 3.3)\r\n\t\t\t\tif(f.ret == null) {\r\n\t\t\t\t\t// Return Dynamic so multi-type arrays can be used in view without casting\r\n\t\t\t\t\tf.ret = macro : Dynamic;\r\n\t\t\t\t}\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\tcase _:\r\n\t\t}\r\n\r\n\t\treturn fields;\r\n\t}\r\n\r\n\t/**\r\n\t * The reference to 'this' is conceptually incorrect with Haxe classes when entering a component method.\r\n\t * Therefore 'this' is changed if vnode.tag (first argument is vnode) is a Haxe object.\r\n\t * __name__ is used to detect whether that is true.\r\n\t*/\r\n\tprivate static function injectCorrectThisReference(methodName : String, f : Function) {\r\n\t\tswitch(f.expr.expr) {\r\n\t\t\tcase EBlock(exprs):\r\n\t\t\t\texprs.unshift(macro\r\n\t\t\t\t\t// Needs to be untyped to avoid clashing with macros that modify return (particularly HaxeContracts)\r\n\t\t\t\t\tuntyped __js__('if(arguments.length > 0 && arguments[0].tag != this) return arguments[0].tag.$methodName.apply(arguments[0].tag, arguments)')\r\n\t\t\t\t);\r\n\t\t\tcase _:\r\n\t\t\t\tf.expr = {expr: EBlock([f.expr]), pos: f.expr.pos};\r\n\t\t\t\tinjectCorrectThisReference(methodName, f);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function replaceMwithFullNamespace(e : Expr) {\r\n\t\t// Autocompletion for m()\r\n\t\tif (Context.defined(\"display\")) switch e.expr {\r\n\t\t\tcase EDisplay(e2, isCall):\r\n\t\t\t\tswitch(e2) {\r\n\t\t\t\t\tcase macro m:\r\n\t\t\t\t\t\te2.expr = (macro mithril.M.m).expr;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase _:\r\n\t\t\t\t}\r\n\t\t\tcase _:\r\n\t\t}\r\n\r\n\t\tswitch(e) {\r\n\t\t\tcase macro M($a, $b, $c), macro m($a, $b, $c):\r\n\t\t\t\te.iter(replaceMwithFullNamespace);\r\n\t\t\t\te.expr = (macro mithril.M.m($a, $b, $c)).expr;\r\n\t\t\tcase macro M($a, $b), macro m($a, $b):\r\n\t\t\t\te.iter(replaceMwithFullNamespace);\r\n\t\t\t\te.expr = (macro mithril.M.m($a, $b)).expr;\r\n\t\t\tcase macro M($a), macro m($a):\r\n\t\t\t\te.expr = (macro mithril.M.m($a)).expr;\r\n\t\t\tcase _:\r\n\t\t\t\te.iter(replaceMwithFullNamespace);\r\n\t\t}\r\n\r\n\t\tswitch(e.expr) {\r\n\t\t\tcase EObjectDecl(fields): for (field in fields) if (componentMethods.has(field.field)) switch field.expr.expr {\r\n\t\t\t\tcase EFunction(_, f):\r\n\t\t\t\t\tif (f.args.length > 0 && f.args[0].type == null) {\r\n\t\t\t\t\t\tf.args[0].type = macro : mithril.M.Vnode<Dynamic>;\r\n\t\t\t\t\t}\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t\tcase EFunction(_, f) if(f.expr != null): \r\n\t\t\t\treturnLastMExpr(f);\r\n\t\t\tcase _:\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Return the last m() call automatically, or an array with m() calls.\r\n\t * Returns null if no expr exists.\r\n\t */\r\n\tprivate static function returnLastMExpr(f : Function) {\r\n\t\tswitch(f.expr.expr) {\r\n\t\t\tcase EBlock(exprs):\r\n\t\t\t\tif (exprs.length > 0)\r\n\t\t\t\t\treturnMOrArrayMExpr(exprs[exprs.length - 1], f);\r\n\t\t\tcase _:\r\n\t\t\t\treturnMOrArrayMExpr(f.expr, f);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Add return to m() calls, or an Array with m() calls.\r\n\t */\r\n\tprivate static function returnMOrArrayMExpr(e : Expr, f : Function) {\r\n\t\tswitch(e.expr) {\r\n\t\t\tcase EReturn(_):\r\n\t\t\tcase EArrayDecl(values):\r\n\t\t\t\tif(values.length > 0 && f != viewField) \r\n\t\t\t\t\tcheckForM(values[0], e);\r\n\t\t\t\telse if(f == viewField)\r\n\t\t\t\t\tinjectReturn(e);\r\n\t\t\tcase _:\r\n\t\t\t\tif(f != viewField) checkForM(e, e);\r\n\t\t\t\telse injectReturn(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Check if e is a m() call, then add return to inject\r\n\t */\r\n\tprivate static function checkForM(e : Expr, inject : Expr) {\r\n\t\tswitch(e) {\r\n\t\t\tcase macro mithril.M.m($a, $b, $c):\r\n\t\t\tcase macro mithril.M.m($a, $b):\r\n\t\t\tcase macro mithril.M.m($a):\r\n\t\t\tcase _: return;\r\n\t\t}\r\n\r\n\t\tinjectReturn(inject);\r\n\t}\r\n\r\n\tprivate static function injectReturn(e : Expr) {\r\n\t\te.expr = EReturn({expr: e.expr, pos: e.pos});\r\n\t}\r\n}\r\n#end\r\n","package webshop;\r\n\r\nimport haxe.Timer;\r\nimport mithril.M;\r\n\r\nusing Lambda;\r\n\r\nenum LoadState {\r\n    Started; Delayed; Done; Error;\r\n}\r\n\r\n/**\r\n * A usability class. A callback runs after a second (default)\r\n * that can be used to display a loader. During the first second\r\n * there's no need to display one since the user can keep focus\r\n * for about that time without thinking that something is wrong.\r\n *\r\n * See ProductList for an example how this class is used.\r\n */\r\nclass Loader {\r\n    var _state = Started;\r\n\r\n    var untilDelay : Int;\r\n    var untilError : Int;\r\n\r\n    var delayTimer : Timer;\r\n    var errorTimer : Timer;\r\n\r\n    function setState(s : LoadState) {\r\n        if(s == _state) return;\r\n        if(s != Started && (_state == Done || _state == Error)) return;\r\n\r\n        //trace('Loader: $_state changing to $s');\r\n        _state = s;\r\n        M.redraw();\r\n    }\r\n\r\n    public function new(untilDelay = 1000, untilError = 5000) {\r\n        this.untilDelay = untilDelay;\r\n        this.untilError = untilError;\r\n    }\r\n\r\n    public function start() {\r\n        setState(Started);\r\n\r\n        if(delayTimer != null) delayTimer.stop();\r\n        if(errorTimer != null) errorTimer.stop();\r\n\r\n        delayTimer = new Timer(untilDelay);\r\n        delayTimer.run = function() setState(Delayed);\r\n\r\n        errorTimer = new Timer(untilError);\r\n        errorTimer.run = function() setState(Error);\r\n    }\r\n\r\n    // done and error have an optional parameter so they can be\r\n    // used in ajax callbacks.\r\n    public function done(?_) setState(Done);\r\n    public function error(?_) setState(Error);\r\n    \r\n    public function state() return _state;\r\n}\r\n","package webshop;\r\n\r\nimport haxecontracts.*;\r\nimport mithril.M;\r\nimport webshop.models.Category;\r\nimport webshop.models.*;\r\n\r\nusing StringTools;\r\nusing Slambda;\r\n\r\n/**\r\n * Left-side menu, listing the categories in the webshop.\r\n */\r\nclass Menu implements Mithril implements HaxeContracts\r\n{\r\n    var categories : Array<Category>;\r\n    var active : Null<Category>;\r\n\r\n    public function new(categories) {\r\n        this.categories = categories;\r\n    }\r\n\r\n    public function setActive(categoryId : Null<String>) {\r\n        this.active = categories.find(function(c) return c.id == categoryId);\r\n    }\r\n\r\n    public function view(vnode) [\r\n        m('ul.nav.nav-sidebar', categories.map(function(c) {\r\n            m('li', {\"class\": (active != null && active == c ? \"active\" : \"\")}, \r\n                m('a', {\r\n                    href: '/category/${c.slug()}',\r\n                    oncreate: M.routeLink\r\n                }, c.name)\r\n            );\r\n        }))\r\n    ];\r\n\r\n    @invariants function invariants() {\r\n        invariant(categories != null);\r\n        invariant(active == null || categories.exists.fn(_ == active));\r\n    }\r\n}\r\n","package haxecontracts;\r\n\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Context;\r\n\r\nusing haxe.macro.ExprTools;\r\nusing Lambda;\r\n\r\n#if macro\r\n\r\n@:enum private class ContractLevel {\r\n\tpublic static var disabled = 0;\r\n\tpublic static var preconditions = 1;\r\n\tpublic static var all = 2;\r\n}\r\n\r\n// A map for the invariant Exprs and their description (null = no description specified)\r\nprivate typedef Invariants = Map<Expr, Expr>;\r\n\r\nclass ContractBuilder\r\n{\r\n\t@macro public static function build() : Array<Field>\r\n\t{\r\n\t\tcontractLevel = \r\n\t\t\tif (Context.defined(\"nocontracts\") || Context.defined(\"no-contracts\") || Context.defined(\"contracts-disabled\"))\r\n\t\t\t\tContractLevel.disabled\r\n\t\t\telse if (Context.defined(\"contracts-preconditions-only\") || Context.defined(\"contracts-only-preconditions\"))\r\n\t\t\t\tContractLevel.preconditions\r\n\t\t\telse\r\n\t\t\t\tContractLevel.all;\r\n\t\t\t\t\r\n\t\timportStaticKeywords = !Context.defined(\"no-contracts-imports\") && !Context.defined(\"contracts-no-imports\");\r\n\t\t\t\t\r\n\t\treturn new ContractBuilder().buildContracts();\r\n\t}\r\n\t\r\n\tpublic static function objectRefToThis(objectRef : Expr) : Expr {\r\n\t\treturn if(objectRef.expr.equals(EConst(CIdent(\"null\")))) {\r\n\t\t\ttry {\r\n\t\t\t\tContext.typeof(macro this);\r\n\t\t\t\tmacro this;\r\n\t\t\t} catch (e : Dynamic) {\r\n\t\t\t\tobjectRef;\r\n\t\t\t}\r\n\t\t} else objectRef;\t\t\r\n\t}\t\r\n\t\r\n\tpublic static var contractLevel(default, null) : Int;\r\n\tpublic static var importStaticKeywords(default, null) : Bool;\r\n\t\r\n\tprivate static function getFunction(field : Field)\r\n\t{\t\t\r\n\t\treturn switch(field.kind)\r\n\t\t{\r\n\t\t\tcase FFun(f): f;\r\n\t\t\tcase _: null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate var invariants : Invariants;\r\n\t\r\n\tprivate function new() {\r\n\t\tinvariants = new Invariants();\r\n\t}\r\n\r\n\tprivate function findInvariants(fields : Array<Field>) : Array<Field>\r\n\t{\r\n\t\tvar keepFields = new Array<Field>();\r\n\t\t\r\n\t\t// Find the invariant method (metadata @invariant)\r\n\t\tfor (field in fields)\r\n\t\t{\t\t\t\r\n\t\t\tif (!field.meta.exists(function(m) { return m.name == \"invariant\" || m.name == \"invariants\"; } ))\r\n\t\t\t{\r\n\t\t\t\tkeepFields.push(field);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// Skip if no contracts are generated.\r\n\t\t\t\tif (contractLevel < ContractLevel.all) continue;\r\n\t\t\t\t\r\n\t\t\t\tvar func : ExprDef;\r\n\r\n\t\t\t\tswitch(field.kind)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase FFun(f): func = f.expr.expr;\r\n\t\t\t\t\tcase _: Context.error(\"The invariant field must be a method.\", field.pos);\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tswitch(func)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Extract the invariant conditions from the method.\r\n\t\t\t\t\t// Note that only the expression itself is extracted, so it must be wrapped in an \r\n\t\t\t\t\t// if-statement or similar to be used propertly.\r\n\t\t\t\t\tcase EBlock(exprs):\r\n\t\t\t\t\t\tfor (e in exprs)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tswitch(e)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcase macro haxecontracts.Contract.invariant($a, $b), macro Contract.invariant($a, $b):\r\n\t\t\t\t\t\t\t\t\tinvariants.set(a, b);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcase macro haxecontracts.Contract.invariant($a), macro Contract.invariant($a):\r\n\t\t\t\t\t\t\t\t\tinvariants.set(a, null);\r\n\r\n\t\t\t\t\t\t\t\tcase (macro invariant($a, $b)) if (importStaticKeywords):\r\n\t\t\t\t\t\t\t\t\tinvariants.set(a, b);\r\n\r\n\t\t\t\t\t\t\t\tcase (macro invariant($a)) if (importStaticKeywords):\r\n\t\t\t\t\t\t\t\t\tinvariants.set(a, null);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcase _:\r\n\t\t\t\t\t\t\t\t\tContext.error(\"An invariant method can only contain Contract.invariant calls.\", e.pos);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase _:\r\n\t\t\t\t\t\tContext.error(\"An invariant method must have a function body.\", field.pos);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn keepFields;\r\n\t}\r\n\t\t\r\n\tprivate static function isPublic(f : Field) return f.access.exists(function(a) return a == Access.APublic);\r\n\tprivate static function isStatic(f : Field) return f.access.exists(function(a) return a == Access.AStatic);\r\n\r\n\t/**\r\n\t * Return a Map of Fields depending on whether they should contain Contract invariants.\r\n\t */\r\n\tprivate function findContractFields(fields : Array<Field>) : Map<Field, Bool>\r\n\t{\r\n\t\tvar output = new Map<Field, Bool>();\r\n\t\tvar fieldNames = new Map<String, Field>();\r\n\t\tvar accessors = [];\r\n\t\t\r\n\t\tfor (f in fields)\r\n\t\t{\r\n\t\t\t// Adding invariants to toString seems to create problems with circular references, so it is disabled.\r\n\t\t\tif (f.name == \"toString\") continue;\r\n\t\t\t\r\n\t\t\tswitch(f.kind)\r\n\t\t\t{\r\n\t\t\t\tcase FProp(getter, _, _, _):\r\n\t\t\t\t\tif ((getter == \"get\" || getter == \"set\") && isPublic(f) && !isStatic(f))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Property getters and setters are ok\r\n\t\t\t\t\t\taccessors.push(getter + \"_\" + f.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\tcase FFun(_):\r\n\t\t\t\t\t// Public instance methods are ok\r\n\t\t\t\t\tif (isPublic(f) && !isStatic(f))\r\n\t\t\t\t\t\toutput.set(f, true);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toutput.set(f, false);\r\n\t\t\t\t\t\tfieldNames.set(f.name, f);\r\n\t\t\t\t\t\t\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Set accessors to allowed here, now when we know their names.\r\n\t\tfor (a in accessors)\r\n\t\t{\r\n\t\t\t// Test for method existance to prevent a confusing compiler error \r\n\t\t\t// which happens when a property accessor is missing.\r\n\t\t\tif(fieldNames.exists(a))\r\n\t\t\t\toutput.set(fieldNames.get(a), true);\r\n\t\t}\r\n\t\t\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\t\r\n\tpublic function buildContracts() : Array<Field>\r\n\t{\r\n\t\tif (Context.defined(\"display\")) {\r\n\t\t\tif (!importStaticKeywords) return null;\r\n\t\t\t\r\n\t\t\tvar fields = Context.getBuildFields();\r\n\t\t\tfor (f in fields) switch f.kind {\r\n\t\t\t\tcase FFun(f) if(f.expr != null):\r\n\t\t\t\t\tautoComplete(f.expr);\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t\treturn fields;\r\n\t\t}\r\n\t\t\r\n\t\tvar keepFields = findInvariants(Context.getBuildFields());\r\n\t\tvar contractFields = findContractFields(keepFields);\r\n\t\tvar noInvariants = new Invariants();\r\n\t\t\t\t\r\n\t\t// usedFields points to a Bool, signaling if the method is public or not.\r\n\t\t// (property accessors are treated as public)\r\n\t\tfor(field in contractFields.keys())\t{\r\n\t\t\tvar f = getFunction(field);\r\n\t\t\tif (f != null && f.expr != null) {\r\n\t\t\t\tnew FunctionRewriter(f, contractFields.get(field) ? invariants : noInvariants, isStatic(field)).rewrite();\r\n\t\t\t}\t\t\t\t\t\r\n\t\t}\r\n\t\t\t\t\r\n\t\treturn keepFields;\r\n\t}\r\n\t\r\n\tfunction autoComplete(e : Expr) {\r\n\t\tswitch e.expr {\r\n\t\t\tcase EDisplay(e2, isCall) if(isCall): switch e2.expr {\r\n\t\t\t\tcase EConst(CIdent(s)) if(s == \"requires\" || s == \"ensures\" || s == \"invariant\" || s == \"old\"):\r\n\t\t\t\t\te2.expr = (macro $p{['haxecontracts', 'Contract', s]}).expr;\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t\tcase _:\r\n\t\t}\r\n\t\te.iter(autoComplete);\r\n\t}\r\n}\r\n\r\nprivate class FunctionRewriter\r\n{\r\n\tvar f : Function;\r\n\tvar start : Expr;\r\n\tvar ensures : Array<Expr>;\r\n\tvar invariants : Invariants;\r\n\tvar returnsValue : Bool;\r\n\tvar isStatic : Bool;\r\n\t\r\n\tvar hasOld : Bool;\r\n\tvar oldExpr : Expr;\r\n\t\r\n\tpublic function new(f : Function, invariants : Invariants, isStatic : Bool)\r\n\t{\r\n\t\tthis.returnsValue = false;\r\n\t\tthis.ensures = [];\t\t\r\n\t\tthis.f = f;\r\n\t\tthis.invariants = invariants;\r\n\t\tthis.isStatic = isStatic;\r\n\r\n\t\tthis.hasOld = false;\t\t\r\n\t\tthis.oldExpr = {\r\n\t\t\texpr: EObjectDecl([for (arg in f.args) { field: arg.name, expr: macro $i{arg.name} }]),\r\n\t\t\tpos: f.expr.pos\r\n\t\t};\r\n\t}\r\n\t\r\n\tpublic function rewrite()\r\n\t{\r\n\t\tif (f.expr == null) return;\r\n\r\n\t\tswitch(f.expr.expr) {\r\n\t\t\tcase EBlock(exprs):\r\n\t\t\t\tthis.returnsValue = if(exprs.length == 0) false else exprs[exprs.length - 1].expr.getName() == \"EReturn\";\r\n\t\t\t\t\r\n\t\t\t\tfor (e in exprs) \r\n\t\t\t\t\trewriteRequires(e);\r\n\t\t\t\t\t\r\n\t\t\t\tif (ContractBuilder.contractLevel < ContractLevel.all) return;\r\n\t\t\t\t\r\n\t\t\t\tif (!this.returnsValue && exprs.length > 0) {\r\n\t\t\t\t\t// If method didn't return, apply postconditions to end of method.\r\n\t\t\t\t\tvar lastPos = exprs[exprs.length - 1].pos;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (e in ensures)\r\n\t\t\t\t\t\texprs.push(e);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (e in invariants.keys()) {\r\n\t\t\t\t\t\tvar message = invariants.get(e);\r\n\t\t\t\t\t\tif(message == null)\r\n\t\t\t\t\t\t\texprs.push(contractBlock(e, \"Contract invariant failed\", lastPos));\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\texprs.push(contractBlockExpr(e, message, lastPos));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (hasOld)\r\n\t\t\t\t\texprs.unshift(macro var __contract_old = $oldExpr);\r\n\t\t\tcase _:\r\n\t\t\t\t// Ignore functions without a body\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function testValidPosition(e : Expr)\r\n\t{\r\n\t\tif (start != null) Context.error(\"Contract checks can only be made in the beginning of a method.\", start.pos);\r\n\t}\r\n\t\r\n\tprivate function contractBlock(condition : Expr, message : String, pos : Position) : Expr\r\n\t{\r\n\t\tmessage += ' for: [${condition.toString()}]';\r\n\t\tvar messageExpr = macro $v{message};\r\n\r\n\t\treturn contractBlockExpr(condition, messageExpr, pos);\r\n\t}\r\n\t\r\n\tprivate function contractBlockExpr(condition : Expr, messageExpr : Expr, pos : Position) : Expr\r\n\t{\t\r\n\t\tvar thisRef = { expr: EConst(CIdent(isStatic ? \"null\" : \"this\")), pos: pos };\r\n\t\t\r\n\t\t// Create an array of identifiers from the method arguments\r\n\t\tvar arguments = macro $a{f.args.map(function(a) return macro $i{a.name})};\r\n\t\t\r\n\t\treturn macro try if (!($condition)) throw false catch (e : Dynamic)\r\n\t\t\t@:pos(condition.pos) throw new haxecontracts.ContractException($messageExpr, $thisRef, $arguments, Std.is(e, Bool) ? null : e);\r\n\t}\r\n\r\n\tprivate function ensuresBlock(returnValue : Expr, pos : Position) : Expr\r\n\t{\r\n\t\tvar copy = [];\r\n\t\t\r\n\t\tfor (i in invariants.keys())\r\n\t\t{\r\n\t\t\tvar message = invariants.get(i);\r\n\t\t\tif(message == null) {\r\n\t\t\t\tcopy.push(contractBlock(i, \"Contract invariant failed\", pos));\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t\tcopy.push(contractBlockExpr(i, message, pos));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.returnsValue)\r\n\t\t\tcopy.push(macro var __contract_output = $returnValue);\r\n\t\t\r\n\t\tfor (ensure in ensures) {\r\n\t\t\treplaceResult(ensure);\r\n\t\t\treplaceOld(ensure);\r\n\t\t\tcopy.push(ensure);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.returnsValue)\r\n\t\t\tcopy.push(macro __contract_output);\r\n\t\telse if(returnValue != null)\r\n\t\t\tcopy.push(macro return $returnValue);\r\n\t\telse\r\n\t\t\tcopy.push(macro return);\r\n\t\t\r\n\t\treturn {expr: EBlock(copy), pos: pos};\r\n\t}\r\n\t\r\n\t// Replace Contract.result with __contract_output\r\n\tprivate function replaceResult(e : Expr)\r\n\t{\r\n\t\tswitch(e)\r\n\t\t{\r\n\t\t\tcase (macro result) if (ContractBuilder.importStaticKeywords):\r\n\t\t\t\tvar exp = macro __contract_output;\r\n\t\t\t\te.expr = exp.expr;\r\n\t\t\tcase macro haxecontracts.Contract.result, macro Contract.result:\r\n\t\t\t\tvar exp = macro __contract_output;\r\n\t\t\t\te.expr = exp.expr;\r\n\t\t\tcase _:\r\n\t\t\t\te.iter(replaceResult);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function replaceOld(e : Expr)\r\n\t{\r\n\t\tfunction setOldExpr(a : Expr) {\r\n\t\t\tvar param = switch a.expr {\r\n\t\t\t\tcase EConst(CIdent(s)) if (f.args.find(function(arg) return arg.name == s) != null): \r\n\t\t\t\t\ts;\r\n\t\t\t\tcase _: \r\n\t\t\t\t\tContext.error(\"Contract.old(p) must refer to a method argument.\", a.pos);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar exp = macro $p{['__contract_old', param]};\r\n\t\t\te.expr = exp.expr;\r\n\t\t\t\r\n\t\t\tthis.hasOld = true;\r\n\t\t}\r\n\t\t\r\n\t\tswitch(e) {\r\n\t\t\tcase (macro old($a)) if (ContractBuilder.importStaticKeywords):\r\n\t\t\t\tsetOldExpr(a);\r\n\t\t\t\t\r\n\t\t\tcase macro haxecontracts.Contract.old($a), macro Contract.old($a):\r\n\t\t\t\tsetOldExpr(a);\r\n\t\t\t\t\r\n\t\t\tcase _:\r\n\t\t\t\te.iter(replaceOld);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function testIfNotOld(e : Expr)\r\n\t{\r\n\t\tvar error = \"Contract.old can only be called within Contract.ensures\";\r\n\t\t\r\n\t\tswitch(e) {\r\n\t\t\tcase (macro old($a)) if (ContractBuilder.importStaticKeywords):\r\n\t\t\t\tContext.error(error, e.pos);\r\n\t\t\t\t\r\n\t\t\tcase macro haxecontracts.Contract.old($a), macro Contract.old($a):\r\n\t\t\t\tContext.error(error, e.pos);\r\n\t\t\t\t\r\n\t\t\tcase _:\r\n\t\t\t\te.iter(testIfNotOld);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function rewriteRequires(e : Expr) : Void\r\n\t{\r\n\t\t// This can be defined before the actual Contract rewrite because it's not allowed\r\n\t\t// to return before a Contract definition.\r\n\t\tif (ContractBuilder.contractLevel == ContractLevel.all) switch e.expr {\r\n\t\t\tcase EFunction(_, _): \r\n\t\t\t\t// Skip inner functions, they should not have the invariants appended.\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tcase EReturn(r):\r\n\t\t\t\tstart = e;\r\n\t\t\t\t\r\n\t\t\t\tif (ensures.length > 0 || !invariants.empty()) {\r\n\t\t\t\t\tif (returnsValue) e.expr = EReturn(ensuresBlock(r, e.pos));\r\n\t\t\t\t\telse e.expr = ensuresBlock(r, e.pos).expr;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\tcase _:\r\n\t\t}\r\n\t\t\r\n\t\tvar emptyDef = EConst(CIdent(\"null\"));\r\n\t\t\r\n\t\tif(ContractBuilder.importStaticKeywords) switch(e) {\r\n\t\t\tcase macro requires($a): e.expr = (macro Contract.requires($a)).expr;\r\n\t\t\tcase macro requires($a, $b): e.expr = (macro Contract.requires($a, $b)).expr;\r\n\t\t\tcase macro ensures($a): e.expr = (macro Contract.ensures($a)).expr;\r\n\t\t\tcase macro ensures($a, $b): e.expr = (macro Contract.ensures($a, $b)).expr;\r\n\t\t\tcase macro invariant($a): e.expr = (macro Contract.invariant($a)).expr;\r\n\t\t\tcase macro invariant($a, $b): e.expr = (macro Contract.invariant($a, $b)).expr;\r\n\t\t\tcase _:\r\n\t\t}\r\n\t\t\r\n\t\tswitch(e)\r\n\t\t{\r\n\t\t\tcase macro haxecontracts.Contract.requires($a), macro Contract.requires($a):\r\n\t\t\t\ttestValidPosition(e);\r\n\t\t\t\ttestIfNotOld(a);\r\n\t\t\t\tif (ContractBuilder.contractLevel < ContractLevel.preconditions)\r\n\t\t\t\t\te.expr = emptyDef;\r\n\t\t\t\telse {\r\n\t\t\t\t\te.expr = contractBlock(a, 'Contract precondition failed', e.pos).expr;\r\n\t\t\t\t}\r\n\r\n\t\t\tcase macro haxecontracts.Contract.requires($a, $b), macro Contract.requires($a, $b):\r\n\t\t\t\ttestValidPosition(e);\r\n\t\t\t\ttestIfNotOld(a);\r\n\t\t\t\ttestIfNotOld(b);\r\n\t\t\t\tif (ContractBuilder.contractLevel < ContractLevel.preconditions)\r\n\t\t\t\t\te.expr = emptyDef;\r\n\t\t\t\telse\r\n\t\t\t\t\te.expr = contractBlockExpr(a, b, e.pos).expr;\r\n\t\t\t\t\r\n\t\t\tcase macro haxecontracts.Contract.ensures($a), macro Contract.ensures($a):\r\n\t\t\t\ttestValidPosition(e);\r\n\t\t\t\t\r\n\t\t\t\tif (ContractBuilder.contractLevel == ContractLevel.all)\r\n\t\t\t\t\tensures.push( { expr: contractBlock(a, 'Contract postcondition failed', e.pos).expr, pos: e.pos } );\r\n\r\n\t\t\t\te.expr = emptyDef;\r\n\r\n\t\t\tcase macro haxecontracts.Contract.ensures($a, $b), macro Contract.ensures($a, $b):\r\n\t\t\t\ttestValidPosition(e);\r\n\t\t\t\t\r\n\t\t\t\tif (ContractBuilder.contractLevel == ContractLevel.all)\r\n\t\t\t\t\tensures.push( { expr: contractBlockExpr(a, b, e.pos).expr, pos: e.pos } );\r\n\t\t\t\t\t\r\n\t\t\t\te.expr = emptyDef;\r\n\r\n\t\t\tcase macro haxecontracts.Contract.invariant($a, $b), macro Contract.invariant($a, $b):\r\n\t\t\t\ttestIfNotOld(a);\r\n\t\t\t\ttestIfNotOld(b);\r\n\t\t\t\tContext.error(\"Contract.invariant calls are only allowed in methods marked with @invariant.\", e.pos);\r\n\t\t\t\t\r\n\t\t\tcase macro haxecontracts.Contract.invariant($a), macro Contract.invariant($a):\r\n\t\t\t\ttestIfNotOld(a);\r\n\t\t\t\tContext.error(\"Contract.invariant calls are only allowed in methods marked with @invariant.\", e.pos);\r\n\r\n\t\t\tcase _:\r\n\t\t\t\tswitch(e.expr) {\r\n\t\t\t\t\tcase EVars(_): // defining a var before contracts is ok to prevent macro conflicts.\r\n\t\t\t\t\tcase _:\r\n\t\t\t\t\t\tstart = e;\r\n\t\t\t\t\t\te.iter(rewriteRequires);\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n#end\r\n","package webshop;\r\n\r\nimport haxecontracts.*;\r\nimport haxe.DynamicAccess;\r\nimport js.html.Element;\r\nimport mithril.M;\r\nimport webshop.models.*;\r\n\r\nusing Slambda;\r\n\r\n/**\r\n * Product listing for a Category.\r\n */\r\nclass ProductList implements Mithril implements HaxeContracts\r\n{\r\n    var menu : Menu;\r\n    var categories : Array<Category>;\r\n    var cart : ShoppingCart;\r\n    var loader : Loader;\r\n    var products : Array<Product>;\r\n\r\n    var currentCategory : Category;\r\n\r\n    public function new(menu, cart, categories) {\r\n        this.menu = menu;\r\n        this.cart = cart;\r\n        this.categories = categories;\r\n        this.loader = new Loader();\r\n        this.products = [];\r\n    }\r\n\r\n    // The reason for not passing products directly to the products property is that\r\n    // then another part of the program has to manage the loader, which breaks encapsulation.\r\n    public function onmatch(params : haxe.DynamicAccess<String>, url : String) {\r\n        requires(params != null);\r\n\r\n        loader.start();\r\n        menu.setActive(null);\r\n\r\n        // Set current category\r\n        currentCategory = categories.find(function(c) return c.slug() == params.get('key'));\r\n\r\n        if(currentCategory == null) {\r\n            loader.error();\r\n            return;\r\n        }\r\n\r\n        menu.setActive(currentCategory.id);\r\n\r\n        // Load new products\r\n        Product.inCategory(currentCategory).then(function(products) {\r\n            this.products = products;\r\n            loader.done();\r\n        }, loader.error);\r\n    }\r\n\r\n    function addToCart(p : Product) {\r\n        cart.add(p);\r\n        cart.open();\r\n    }\r\n\r\n    // Note that the ProductList isn't a Component (no view method), so it cannot have \r\n    // lifecycle methods unless explicitly displayed with m().\r\n    public function render() {\r\n        var loading = switch loader.state() {\r\n            case Started: m('div.row', \"\");\r\n            case Delayed: m('div.row', m('div.col-xs-12', m('h1', \"Loading...\")));\r\n            case Error: m('div.row', m('div.col-xs-12', m('h1', {style: {color: \"red\"}}, \"Loading error, please reload page.\")));\r\n            case Done: null;\r\n        }\r\n\r\n\t\treturn if(loading != null) loading else [\r\n            m('H2.sub-header', currentCategory.name),\r\n            m('div.table-responsive', [\r\n                m('table.table.table-striped', [\r\n                    m('thead', [\r\n                        m('tr', [\r\n                            m('th', \"Name\"),\r\n                            m('th', \"Price\"),\r\n                            m('th', \"Stock\"),\r\n                            m('th', null)\r\n                        ])\r\n                    ]),\r\n                    m('tbody[id=products]', products.map(function(p) \r\n                        m('tr', [\r\n                            m('td', m('a', {\r\n                                href: '/product/${p.id}',\r\n                                oncreate: M.routeLink\r\n                            }, p.name)),\r\n                            m('td', p.price >= 0 ? '$$${p.price}' : \"\"),\r\n                            m('td', {style: {color: p.stock < 10 ? \"red\" : \"\"}}, Std.string(p.stock)),\r\n                            m('td', p.stock == 0 ? null :\r\n                                m('button.btn.btn-success.btn-xs', {\r\n                                    onclick: addToCart.bind(p)\r\n                                }, [\r\n                                    m('span.glyphicon.glyphicon-shopping-cart', {\"aria-hidden\": \"true\"}),\r\n                                    cast \"Add to cart\" // Need a cast since mixed Arrays aren't valid.\r\n                                ])\r\n                            )\r\n                        ])\r\n                    ))\r\n                ])\r\n            ])\r\n        ];\r\n    }\r\n\r\n    @invariants function invariants() {\r\n        invariant(products != null);\r\n        invariant(menu != null);\r\n        invariant(categories != null);\r\n        invariant(cart != null);\r\n        invariant(loader != null);\r\n        invariant(currentCategory == null || categories.exists.fn(_ == currentCategory));\r\n    }    \r\n}","package webshop;\r\n\r\nimport haxecontracts.*;\r\nimport js.html.Element;\r\nimport js.html.MouseEvent;\r\nimport mithril.M;\r\nimport webshop.models.*;\r\n\r\nusing Lambda;\r\nusing StringTools;\r\n\r\nclass ProductPage implements Mithril implements HaxeContracts\r\n{\r\n    var loader : Loader;\r\n    var cart : ShoppingCart;\r\n    var menu : Menu;\r\n\r\n    var product : Null<Product>;\r\n\r\n    public function new(menu, cart) {\r\n        this.cart = cart;\r\n        this.loader = new Loader();\r\n        this.menu = menu;\r\n    }\r\n\r\n    public function onmatch(params : haxe.DynamicAccess<String>, url : String) {\r\n        loader.start();\r\n\r\n        Product.all().then(function(products : Array<Product>) { \r\n            menu.setActive(null);\r\n            product = products.find(function(p) return p.id == params.get('key'));\r\n            if(product != null) {\r\n                menu.setActive(product.category.id);\r\n                loader.done();\r\n            } \r\n            else loader.error();\r\n        }, \r\n            loader.error\r\n        );\r\n\t\t\r\n\t\treturn null;\r\n    }\r\n\r\n    function addToCart(p : Product) {\r\n        cart.add(p);\r\n        cart.open();\r\n    }\r\n\r\n    public function render(vnode) {\r\n        var template = switch loader.state() {\r\n            case Started: m('div.row', \"\");\r\n            case Delayed: m('div.row', m('div.col-xs-12', m('h1', \"Loading...\")));\r\n            case Error: m('div.row', m('div.col-xs-12', m('h1', {style: {color: \"red\"}}, \"Loading error, please reload page.\")));\r\n            case Done: null;\r\n        }\r\n\t\t\r\n\t\tvar button = function() m('button.btn.btn-lg.btn-success[type=button]', \r\n            {onclick: addToCart.bind(product)},\r\n            \"Add to Cart\"\r\n        );\r\n\r\n\t\treturn if (template != null) template else [\r\n            m('div.row', m('div.col-xs-12', m('h1', product.name))),\r\n            m('div.row', [\r\n                m('div.col-xs-12.col-sm-12.col-md-7.col-lg-6', [\r\n                    m(\"img[data-src='holder.js/100px450?auto=yes&random=yes']\", {\r\n                        oncreate: function() untyped __js__(\"Holder.run()\")\r\n                    }),\r\n                    m('div.clearfix', {style: {\"margin\": \"10px\"}}),\r\n                    m('div.row', [\r\n                        m('div.col-xs-2', m('div.h2', \"$\" + product.price)),\r\n                        m('div.col-xs-4', m('div.h2', product.stock > 0 ? button() : m('h3', \"Out of stock\")))\r\n                    ])\r\n                ]),\r\n                m('div.col-xs-12.col-sm-12.col-md-5.col-lg-6', lorem.map(function(l) m('p', l)))\r\n            ])\r\n        ];\r\n    }\r\n\r\n    @invariants function invariants() {\r\n        invariant(cart != null);\r\n        invariant(loader != null);\r\n        invariant(menu != null);\r\n    }\r\n\r\n    static var lorem = \r\n    \"Cupcake ipsum dolor sit amet pudding. Tiramisu marshmallow cotton candy fruitcake gummies candy gummi bears. Powder pastry oat cake oat cake dragée soufflé apple pie. Chocolate bar bear claw cupcake I love dragée toffee oat cake marshmallow bonbon. Fruitcake marshmallow I love pudding I love jelly beans carrot cake biscuit. Lollipop brownie tart apple pie cotton candy sugar plum candy. Topping lollipop wafer cotton candy fruitcake toffee.\r\n    Macaroon candy canes lemon drops sugar plum topping pudding. Lemon drops chocolate cupcake cheesecake. Jelly beans soufflé sugar plum donut cheesecake I love ice cream caramels. Muffin gummies toffee candy canes. Jelly beans I love fruitcake dragée chocolate. Chocolate bar candy canes danish soufflé. I love cotton candy liquorice jelly.\r\n    Liquorice applicake tiramisu I love tiramisu applicake pie brownie applicake. Toffee danish tiramisu pie. Dessert jelly pudding marzipan jelly. Tootsie roll donut marshmallow jujubes marshmallow lollipop cookie brownie gummies. Brownie candy canes brownie. Fruitcake dessert toffee apple pie chocolate cake powder chocolate. Tart muffin jelly ice cream liquorice marzipan. Icing brownie liquorice I love ice cream.\r\n    Toffee danish icing cheesecake I love. Cake croissant sweet topping jelly-o marzipan topping jelly-o sweet. Dragée I love cupcake I love sugar plum brownie apple pie. I love lollipop gummi bears soufflé gummi bears apple pie dragée tootsie roll candy canes. Lemon drops applicake fruitcake candy canes liquorice. Ice cream cookie brownie jujubes icing. Candy canes I love bonbon danish. Jelly jelly beans chocolate bar pastry biscuit ice cream chocolate cake jelly beans. Candy chupa chups jujubes ice cream. Tootsie roll tart caramels cupcake.\r\n    Marzipan applicake ice cream brownie tart donut cake. Sweet roll soufflé tiramisu pastry gummi bears candy sweet roll topping apple pie. Dessert lemon drops fruitcake icing icing I love. Dragée fruitcake I love I love pie. Halvah dragée sweet cotton candy pudding apple pie chupa chups. Bear claw cotton candy I love muffin muffin unerdwear.com soufflé croissant. Cookie cookie danish tart sweet cheesecake.\r\n    \".trim().split(\"\\n\");\r\n}\r\n","package webshop;\r\n\r\nimport js.html.DOMElement in Element;\r\nimport haxe.Constraints.Function;\r\nimport haxe.DynamicAccess;\r\nimport js.Browser;\r\nimport js.html.Event;\r\nimport js.html.InputElement;\r\nimport js.html.KeyboardEvent;\r\nimport mithril.M;\r\nimport webshop.models.*;\r\nusing Lambda;\r\nusing StringTools;\r\n\r\nclass Search implements Mithril\r\n{\r\n    var results : Array<Product> = [];\r\n\tvar clickHandler : Function;\r\n\r\n    public function new() {}\r\n\r\n    function searchEvent(phrase : String) {\r\n        if(phrase.length < 2) \r\n            results = [];\r\n        else\r\n            Product.search(phrase.toLowerCase()).then(function(r) return results = r).then(function(_) M.redraw());\r\n    }\r\n\r\n    function documentClickEvent(parent : Element, e : Event) {\r\n        // Clear results (same as closing the dropdown menu) if clicking outside it.\r\n        var el : Element = cast e.target;\r\n        while(el != null) {\r\n            if(el == parent) return;\r\n            el = el.parentElement;\r\n        }\r\n\r\n        results = [];\r\n        M.redraw(); // Need to redraw because it's not a Mithril handled event.\r\n    }\r\n\r\n    public function view() {\r\n        [\r\n            m('input.form-control', {\r\n                placeholder: \"Search...\",\r\n                oninput: M.withAttr(\"value\", searchEvent),\r\n                onfocus: M.withAttr(\"value\", searchEvent)\r\n            }),\r\n            m('UL.dropdown-menu.dropdown-menu-right', {\r\n                role: \"menu\",\r\n                style: {display: results.length > 0 ? \"block\" : \"none\"},\r\n                oncreate: function(vnode) {\t\t\t\t\t\r\n\t\t\t\t\tclickHandler = documentClickEvent.bind(vnode.dom.parentElement);\r\n                    Browser.document.documentElement.addEventListener(\"click\", clickHandler);\r\n                },\r\n\t\t\t\tonremove: function(vnode) {\r\n\t\t\t\t\tBrowser.document.documentElement.removeEventListener(\"click\", clickHandler);\r\n\t\t\t\t}\r\n            }, results.map(function(p)\r\n                m('li', {role: \"presentation\"},\r\n                    m('a', {\r\n                        role: \"menuitem\",\r\n                        tabindex: -1,\r\n                        href: '/product/${p.id}',\r\n                        oncreate: M.routeLink\r\n                    }, p.name)\r\n                )\r\n            ))\r\n        ];\r\n    }\r\n}\r\n","package webshop;\r\n\r\nimport haxecontracts.*;\r\nimport haxe.ds.ObjectMap;\r\nimport js.Browser;\r\nimport js.html.DOMElement in Element;\r\nimport js.html.Event;\r\nimport haxe.Timer;\r\nimport mithril.M;\r\nimport webshop.models.*;\r\nimport haxe.Serializer;\r\nimport haxe.Unserializer;\r\n\r\nusing Lambda;\r\n\r\nclass ShoppingCart implements Mithril implements HaxeContracts\r\n{\r\n    var isOpen : Bool;\r\n    var cartParent : Element;\r\n    var dropDownMenu : Element;\r\n\r\n    var content : ObjectMap<Product, Int> = new ObjectMap<Product, Int>();\r\n\r\n    public function new() {\r\n        this.isOpen = false;\r\n        unserialize();\r\n    }\r\n\r\n    function products() {\r\n        return {iterator: content.keys};\r\n    }\r\n\r\n    public function add(product : Product) {\r\n        var existing = products().find(function(p) return p.id == product.id);\r\n        if(existing != null) set(existing, content.get(existing)+1);\r\n        else set(product, 1);\r\n    }\r\n\r\n    public function set(product : Product, v : Int) {\r\n        var existing = products().find(function(p) return product.id == p.id);\r\n\r\n        if(v <= 0 && existing != null) content.remove(product);\r\n        else if(v > 0) content.set(product, v);\r\n\r\n        serialize();\r\n    }\r\n\r\n    public function open() {\r\n        requires(cartParent != null);\r\n        requires(dropDownMenu != null);\r\n\t\t\r\n        isOpen = true;\r\n\r\n        var html = Browser.document.documentElement;\r\n\r\n        // A little tweak to keep the menu size when removing items.\r\n        // Set the width to auto and after a short delay its calculated width.\r\n        dropDownMenu.style.width = \"auto\";\r\n        html.removeEventListener(\"click\", clickOutsideCart);\r\n\r\n        Timer.delay(function() {\r\n            html.addEventListener(\"click\", clickOutsideCart);\r\n            dropDownMenu.style.width = Std.string(dropDownMenu.offsetWidth) + \"px\";\r\n            M.redraw();\r\n        }, 10);\r\n    }\r\n\r\n    function clickOutsideCart(e : Event) {\r\n        // Close cart if clicking outside it.\r\n        var el : Element = cast e.target;\r\n        while(el != null) {\r\n            if(el == cartParent) return;\r\n            el = el.parentElement;\r\n        }\r\n\r\n        isOpen = false;\r\n        M.redraw(); // Need to redraw because it's not a Mithril handled event.\r\n    }\r\n\r\n    public function view() [\r\n\t\tm('li', {\r\n\t\t\t\"class\": isOpen ? \"dropdown open\" : \"dropdown\",\r\n\t\t\toncreate: function(vnode) {\r\n\t\t\t\tcartParent = vnode.dom.parentElement;\r\n\t\t\t\t// Need to prevent dropdown from closing automatically:\r\n\t\t\t\tvnode.dom.addEventListener(\"hide.bs.dropdown\", function() return false);\r\n\t\t\t}\r\n\t\t}, [\r\n\t\t\tm('a.dropdown-toggle', {\r\n\t\t\t\thref: \"\",\r\n\t\t\t\trole: \"button\", \r\n\t\t\t\t\"aria-expanded\": false,\r\n\t\t\t\tonclick: function(e) {\r\n                    e.preventDefault();\r\n                    open();\r\n                }\r\n\t\t\t}, [\r\n\t\t\t\tcast \"Shopping cart \",\r\n\t\t\t\tm('span.caret', null)\r\n\t\t\t]),\r\n\t\t\tm('ul.dropdown-menu', {\r\n\t\t\t\trole: \"menu\",\r\n\t\t\t\toncreate: function(vnode) {\r\n                    dropDownMenu = vnode.dom;\r\n                }\r\n\t\t\t}, items())\r\n\t\t]),\r\n\t\tm('li', content.empty() \r\n\t\t\t? m('span', \"Proceed to checkout\")\r\n\t\t\t: m(\"a[href='/checkout']\", {oncreate: M.routeLink}, \"Proceed to checkout\")\r\n        )\r\n\t];\r\n\r\n    function items() : Array<Vnodes> {\r\n        if(content.empty()) return [m('li', m('a', \"Empty\"))];\r\n\r\n        var total = 0.0;\r\n        var products = products().map(function(p) {\r\n            var subTotal = p.price * content.get(p);\r\n            total += subTotal;\r\n            \r\n            m('li', m('a', [\r\n                m(\"input[type=number]\", {\r\n                    min: 0, \r\n                    value: content.get(p), \r\n                    style: {width: \"36px\"},\r\n                    oninput: M.withAttr(\"value\", set.bind(p, _))\r\n                }),\r\n                m('span', m('a', { \r\n                    oncreate: M.routeLink, \r\n                    href: '/product/${p.id}', \r\n                }, ' ${p.name}'), \" | $\" + subTotal)\r\n            ]));\r\n        }).concat([\r\n            m('li.divider', null),\r\n            m('li', m('a', 'Total: $' + total))\r\n        ]);\r\n\r\n        return products.array();        \r\n    }\r\n\t\r\n    ///// Saving and restoring the cart to localStorage /////\r\n\r\n    function serialize() {\r\n        var output = [for (p in products()) p.id => content.get(p)];\r\n\r\n        Browser.getLocalStorage().setItem(\"cart\", haxe.Serializer.run(output));\r\n    }\r\n\r\n    function unserialize() {\r\n        var data = Browser.getLocalStorage().getItem(\"cart\");\r\n        if(data == null) return;\r\n\r\n        try {\r\n            var cartData : Map<String, Int> = cast Unserializer.run(data);\r\n            \r\n            Product.all().then(function(products : Array<Product>) {\r\n                products = products.filter(function(p) return cartData.exists(p.id));\r\n                for(p in products) content.set(p, cartData.get(p.id));\r\n                M.redraw();\r\n            });\r\n        } catch(e : Dynamic) {}\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\t\r\n    @invariants function invariants() {\r\n        invariant(content != null);\r\n    }\r\n}\r\n","package webshop;\r\n\r\n#if js\r\nimport js.Browser;\r\n#end\r\nimport mithril.M;\r\nimport webshop.models.*;\r\n\r\nusing Slambda;\r\nusing StringTools;\r\n\r\n/**\r\n * A simple webshop to demonstrate the power of Mithril.\r\n */\r\nclass Webshop implements Mithril\r\n{\r\n\t//\r\n\t// Program entry point\r\n\t// With a preprocessor directive to support testing. Please ignore it.\r\n\t//\r\n\t#if !buddy\r\n    static function main() {\r\n        Category.all().then(function(categories) {\r\n            new Webshop(categories);\r\n        });\r\n    }\r\n\t\r\n    public function new(categories : Array<Category>) {\r\n        var cart = new ShoppingCart();\r\n        var menu = new Menu(categories);\r\n        \r\n        var routes = {\r\n            \"/\": this,\r\n            \"/category/:key\": new ProductList(menu, cart, categories),\r\n            \"/product/:key\": new ProductPage(menu, cart),\r\n            \"/checkout\": new Checkout(cart)\r\n        };\r\n\t\t\r\n\t\tvar element = Browser.document.getElementById;\r\n\r\n        // Routes for the main page content\r\n        M.route(element(\"content\"), \"/\", routes);\r\n\r\n        // Define modules that should not change if the main content changes\r\n        M.mount(element(\"navigation\"), menu);\r\n        M.mount(element(\"shopping-cart\"), cart);\r\n        M.mount(element(\"search\"), new Search());\r\n\r\n        // An \"inline module\" just to create the home link.\r\n        M.mount(element(\"home-link\"), {\r\n            view: function() \r\n                m(\"a.navbar-brand[href='/']\", {oncreate: M.routeLink}, \"Mithril/Haxe Webshop\")\r\n        });\r\n    }\r\n\t#else\r\n\tpublic function new() {}\r\n\t#end\r\n\r\n    // Welcome text for the default route\r\n    public function view() [\r\n        m('h1', \"Welcome!\"),\r\n        m('p', \"Select a category on the left to start shopping.\"),\r\n        m('p', \"Built in Haxe & Mithril. Source code: \", \r\n            m('a', \r\n                {href: \"https://github.com/ciscoheat/mithril-hx/tree/master/example/webshop\", target: \"_blank\"}, \r\n                \"https://github.com/ciscoheat/mithril-hx/tree/master/example/webshop\"\r\n            )\r\n        ),\r\n        m('h2', \"Todo\"),\r\n        m('ul.list-group', todo().map(function(t) {\r\n            var done = t.toLowerCase().startsWith(\"x \");\r\n            m('li.list-group-item', { \r\n                style: { textDecoration: done ? \"line-through\" : \"none\" }\r\n            }, [\r\n                m('input[type=checkbox]', { checked: done ? \"checked\" : \"\" }),\r\n                m(\"span[style='margin-left:5px']\", (done ? t.substring(2) : t))\r\n            ]);\r\n        }))\r\n    ];\r\n\r\n    function todo() return [\r\n        \"Checkout page\",\r\n        \"Thank you page\",\r\n        \"x Make cart not change size when open and items are deleted\",\r\n        \"Enable use of arrow keys when navigating search results\",\r\n        \"URL slugs for products\",\r\n        \"Fix css for navbar and cart for low-res devices\",\r\n        \"Administration section...\"\r\n    ];\r\n}\r\n","package webshop.models;\r\n\r\nimport js.Promise;\r\nimport mithril.M;\r\nusing StringTools;\r\n\r\nclass Category\r\n{\r\n    public var id : String;\r\n    public var name : String;\r\n    public var products(default, null) : Array<Product>;\r\n\r\n    public function new(?data) {\r\n        if(data == null) return;\r\n        this.id = data.id;\r\n        this.name = data.name;\r\n    }\r\n\r\n    public function slug() {\r\n        return name.replace(\" \", \"-\").toLowerCase();\r\n    }\r\n\r\n    ///// Data access /////\r\n\r\n    public static function all() : Promise<Array<Category>> {\r\n        // Simulate a short delay, but every once in a while a long delay.\r\n        var delay = Std.random(100);\r\n        if(Math.random() > 0.87) delay = 2000;\r\n\r\n        var mapData = function(data : Array<Dynamic>) {\r\n            return data.map(function(d : Dynamic) {\r\n                var category = new Category(d);\r\n                category.products = d.products.map(function(p) return new Product(p, category));\r\n                return category;\r\n            });\r\n        };\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            haxe.Timer.delay(function() {\r\n                var newData = mapData(data());\r\n                resolve(newData);\r\n            }, delay);\r\n        });\r\n\r\n        // See http://beta.json-generator.com/A0FlQeQ for content\r\n        // (and a great site for generating JSON-data)\r\n        /*\r\n        var request = M.request({\r\n            method: \"GET\",\r\n            url: 'http://beta.json-generator.com/api/json/get/A0FlQeQ?delay=$delay',\r\n            background: true,\r\n            initialValue: [],\r\n        }).then(mapData);\r\n        */\r\n    }\r\n\r\n    static function data() {\r\n        return [\r\n            {\r\n                \"id\": \"7e778794-1e21-492a-82c0-63ac0adcb9b5\",\r\n                \"name\": \"Morriston\",\r\n                \"products\": [\r\n                    {\r\n                        \"id\": \"aeca7d5b-c854-412d-acc2-8e6e6149419a\",\r\n                        \"name\": \"In\",\r\n                        \"price\": 129,\r\n                        \"stock\": 7\r\n                    },\r\n                    {\r\n                        \"id\": \"cd798c91-7b06-4797-8ee3-9e30712159d5\",\r\n                        \"name\": \"Ex laboris reprehenderit veniam\",\r\n                        \"price\": 407,\r\n                        \"stock\": 0\r\n                    },\r\n                    {\r\n                        \"id\": \"75166f69-32a5-4c49-b7c2-8c8e427d2fb0\",\r\n                        \"name\": \"Aliquip cupidatat qui\",\r\n                        \"price\": 505,\r\n                        \"stock\": 21\r\n                    },\r\n                    {\r\n                        \"id\": \"85f91501-9f58-47e1-ac31-55b43068beac\",\r\n                        \"name\": \"Eu tempor\",\r\n                        \"price\": 544,\r\n                        \"stock\": 13\r\n                    },\r\n                    {\r\n                        \"id\": \"d4cc61e2-a1d7-4ee4-bd97-bd84f24431cf\",\r\n                        \"name\": \"Non aute\",\r\n                        \"price\": 669,\r\n                        \"stock\": 19\r\n                    },\r\n                    {\r\n                        \"id\": \"502b3df9-da67-44b3-987a-63ca9c47c405\",\r\n                        \"name\": \"Irure\",\r\n                        \"price\": 133,\r\n                        \"stock\": 20\r\n                    },\r\n                    {\r\n                        \"id\": \"4d8d4c55-2fab-455f-adb2-ed7565a2ccc4\",\r\n                        \"name\": \"Consequat anim\",\r\n                        \"price\": 776,\r\n                        \"stock\": 9\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"784f137b-d56a-4ea8-a442-05aa41d8de81\",\r\n                \"name\": \"Charco\",\r\n                \"products\": [\r\n                    {\r\n                        \"id\": \"3859bc43-66f4-4a5a-94ef-c05b699e750f\",\r\n                        \"name\": \"Eiusmod et\",\r\n                        \"price\": 634,\r\n                        \"stock\": 20\r\n                    },\r\n                    {\r\n                        \"id\": \"6aff4125-1209-43af-a991-9d153417f95c\",\r\n                        \"name\": \"Ex consequat\",\r\n                        \"price\": 700,\r\n                        \"stock\": 6\r\n                    },\r\n                    {\r\n                        \"id\": \"9f12b8a6-36b7-4bed-bc62-8cecd23434ea\",\r\n                        \"name\": \"Aliqua\",\r\n                        \"price\": 486,\r\n                        \"stock\": 13\r\n                    },\r\n                    {\r\n                        \"id\": \"d4e2975f-f90a-4510-bf9a-4783c0b4c79a\",\r\n                        \"name\": \"Culpa sunt aliquip ipsum\",\r\n                        \"price\": 81,\r\n                        \"stock\": 9\r\n                    },\r\n                    {\r\n                        \"id\": \"a6be9192-ecbe-4bc8-898c-15c22aac3b2d\",\r\n                        \"name\": \"Minim ipsum excepteur\",\r\n                        \"price\": 690,\r\n                        \"stock\": 15\r\n                    },\r\n                    {\r\n                        \"id\": \"c0dec222-7ee4-4bf4-a816-0f6eef464a84\",\r\n                        \"name\": \"Nisi\",\r\n                        \"price\": 788,\r\n                        \"stock\": 5\r\n                    },\r\n                    {\r\n                        \"id\": \"a568c771-3049-4c90-8f30-02d933a05ed4\",\r\n                        \"name\": \"Anim sunt\",\r\n                        \"price\": 208,\r\n                        \"stock\": 3\r\n                    },\r\n                    {\r\n                        \"id\": \"937ce3ea-0af1-423a-8fd4-7902ed8e0b7d\",\r\n                        \"name\": \"Nisi et ea esse\",\r\n                        \"price\": 662,\r\n                        \"stock\": 13\r\n                    },\r\n                    {\r\n                        \"id\": \"1dd52d85-b1d5-4bf8-a0da-b5779045915d\",\r\n                        \"name\": \"Sit nulla velit eu\",\r\n                        \"price\": 56,\r\n                        \"stock\": 0\r\n                    },\r\n                    {\r\n                        \"id\": \"ced7bf71-47f5-44d7-a581-19685baed67e\",\r\n                        \"name\": \"Ad\",\r\n                        \"price\": 742,\r\n                        \"stock\": 22\r\n                    },\r\n                    {\r\n                        \"id\": \"9af9995b-f493-4f2c-a039-c812fa2a18c8\",\r\n                        \"name\": \"Enim\",\r\n                        \"price\": 287,\r\n                        \"stock\": 16\r\n                    },\r\n                    {\r\n                        \"id\": \"a73ea945-8919-4cde-b483-a1c4ce7ab38d\",\r\n                        \"name\": \"Id adipisicing\",\r\n                        \"price\": 320,\r\n                        \"stock\": 3\r\n                    },\r\n                    {\r\n                        \"id\": \"c836478a-6716-4e1d-9ba0-c069b3d057be\",\r\n                        \"name\": \"Eu excepteur\",\r\n                        \"price\": 545,\r\n                        \"stock\": 15\r\n                    },\r\n                    {\r\n                        \"id\": \"fb21236f-afea-4691-8dda-123a49877909\",\r\n                        \"name\": \"Est ipsum\",\r\n                        \"price\": 93,\r\n                        \"stock\": 11\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"c02e8162-9ed2-4ba6-aa4d-db7caa25cb7a\",\r\n                \"name\": \"Rushford\",\r\n                \"products\": [\r\n                    {\r\n                        \"id\": \"65fe31aa-c00c-4412-b01b-5660b0192ef6\",\r\n                        \"name\": \"Sit\",\r\n                        \"price\": 279,\r\n                        \"stock\": 17\r\n                    },\r\n                    {\r\n                        \"id\": \"de3232f5-2cf1-40ea-b145-78fee43359ee\",\r\n                        \"name\": \"Proident ut nostrud reprehenderit\",\r\n                        \"price\": 769,\r\n                        \"stock\": 11\r\n                    },\r\n                    {\r\n                        \"id\": \"0b9e9792-500a-4331-a128-71ef20134d67\",\r\n                        \"name\": \"Excepteur\",\r\n                        \"price\": 707,\r\n                        \"stock\": 3\r\n                    },\r\n                    {\r\n                        \"id\": \"daba8379-baa0-40f6-b0d0-2d1f9dd9d781\",\r\n                        \"name\": \"Lorem excepteur magna\",\r\n                        \"price\": 397,\r\n                        \"stock\": 6\r\n                    },\r\n                    {\r\n                        \"id\": \"6387c47a-4fae-4737-95c8-f20df2245b3b\",\r\n                        \"name\": \"Eiusmod\",\r\n                        \"price\": 477,\r\n                        \"stock\": 29\r\n                    },\r\n                    {\r\n                        \"id\": \"11d2b2b8-66ba-4e5d-9378-6c2451774bd5\",\r\n                        \"name\": \"Consectetur anim tempor reprehenderit\",\r\n                        \"price\": 384,\r\n                        \"stock\": 16\r\n                    },\r\n                    {\r\n                        \"id\": \"ceaed769-7de3-40e2-9d4a-34d3d69b6295\",\r\n                        \"name\": \"Consectetur officia\",\r\n                        \"price\": 36,\r\n                        \"stock\": 27\r\n                    },\r\n                    {\r\n                        \"id\": \"053c27dd-6596-4b5c-815a-8f38fc00944a\",\r\n                        \"name\": \"Mollit pariatur\",\r\n                        \"price\": 66,\r\n                        \"stock\": 30\r\n                    },\r\n                    {\r\n                        \"id\": \"3badedaa-354d-46e4-a59b-c1b308a5ea70\",\r\n                        \"name\": \"Cillum tempor fugiat\",\r\n                        \"price\": 503,\r\n                        \"stock\": 24\r\n                    },\r\n                    {\r\n                        \"id\": \"11d9e54c-160a-44c4-88be-bc310bd9d0b6\",\r\n                        \"name\": \"Ullamco\",\r\n                        \"price\": 626,\r\n                        \"stock\": 1\r\n                    },\r\n                    {\r\n                        \"id\": \"0a1b3fa4-3a7f-4e3a-9428-8d0e2990ce15\",\r\n                        \"name\": \"Deserunt dolore consequat\",\r\n                        \"price\": 473,\r\n                        \"stock\": 25\r\n                    },\r\n                    {\r\n                        \"id\": \"591c4d35-8caa-4d77-8511-4de8d5af857d\",\r\n                        \"name\": \"Laborum eiusmod cupidatat occaecat\",\r\n                        \"price\": 277,\r\n                        \"stock\": 13\r\n                    },\r\n                    {\r\n                        \"id\": \"a3bf5734-2702-4c68-8eef-20d7e348d549\",\r\n                        \"name\": \"Excepteur elit quis\",\r\n                        \"price\": 193,\r\n                        \"stock\": 21\r\n                    },\r\n                    {\r\n                        \"id\": \"c93715b7-4368-4e0d-82d2-515a930ddc46\",\r\n                        \"name\": \"Duis pariatur aliquip consectetur\",\r\n                        \"price\": 753,\r\n                        \"stock\": 5\r\n                    },\r\n                    {\r\n                        \"id\": \"f715a7da-e233-470c-b687-2c4857f355ff\",\r\n                        \"name\": \"Eiusmod excepteur incididunt\",\r\n                        \"price\": 389,\r\n                        \"stock\": 23\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"7875052d-b067-40ff-89f7-eead6bd4cb3d\",\r\n                \"name\": \"Castleton\",\r\n                \"products\": [\r\n                    {\r\n                        \"id\": \"bdad571d-b19b-47f0-bfb4-acb8e1fd4a35\",\r\n                        \"name\": \"In non occaecat laborum\",\r\n                        \"price\": 232,\r\n                        \"stock\": 9\r\n                    },\r\n                    {\r\n                        \"id\": \"806b16b5-75fa-404b-8d30-24804fe5dec3\",\r\n                        \"name\": \"Nulla eu\",\r\n                        \"price\": 626,\r\n                        \"stock\": 11\r\n                    },\r\n                    {\r\n                        \"id\": \"148ef400-11cd-404f-8c4f-81bbf8372003\",\r\n                        \"name\": \"Quis in\",\r\n                        \"price\": 757,\r\n                        \"stock\": 10\r\n                    },\r\n                    {\r\n                        \"id\": \"367c2f02-6efa-4b84-ab21-ea609a4f392a\",\r\n                        \"name\": \"Minim ullamco dolore\",\r\n                        \"price\": 599,\r\n                        \"stock\": 10\r\n                    },\r\n                    {\r\n                        \"id\": \"ed42412e-21a4-4fe0-ada8-3c647024ee3b\",\r\n                        \"name\": \"Voluptate\",\r\n                        \"price\": 246,\r\n                        \"stock\": 0\r\n                    },\r\n                    {\r\n                        \"id\": \"68042de5-325d-44bc-a023-d3735d35ffb5\",\r\n                        \"name\": \"Proident labore exercitation sit\",\r\n                        \"price\": 117,\r\n                        \"stock\": 28\r\n                    },\r\n                    {\r\n                        \"id\": \"41235166-02d0-46f9-8a74-1d2777d579ed\",\r\n                        \"name\": \"Aute\",\r\n                        \"price\": 508,\r\n                        \"stock\": 4\r\n                    },\r\n                    {\r\n                        \"id\": \"c50a5eec-35f1-4d74-9c2a-e4e8d048f38a\",\r\n                        \"name\": \"Ullamco mollit voluptate\",\r\n                        \"price\": 376,\r\n                        \"stock\": 8\r\n                    },\r\n                    {\r\n                        \"id\": \"efd8cb4e-e479-440e-90a9-ad2aa382863c\",\r\n                        \"name\": \"Veniam\",\r\n                        \"price\": 564,\r\n                        \"stock\": 15\r\n                    },\r\n                    {\r\n                        \"id\": \"7364ac1b-0439-4414-8f3d-aa9739f4fc9e\",\r\n                        \"name\": \"Elit\",\r\n                        \"price\": 244,\r\n                        \"stock\": 22\r\n                    },\r\n                    {\r\n                        \"id\": \"e7de0932-bcda-486b-ac5f-b9755871267b\",\r\n                        \"name\": \"Fugiat\",\r\n                        \"price\": 768,\r\n                        \"stock\": 10\r\n                    },\r\n                    {\r\n                        \"id\": \"5765625f-1c34-47df-ba6a-e3a62156a70a\",\r\n                        \"name\": \"Quis sunt\",\r\n                        \"price\": 46,\r\n                        \"stock\": 18\r\n                    },\r\n                    {\r\n                        \"id\": \"ec9dfc8f-24ca-4b5a-ab72-bd70004d9a02\",\r\n                        \"name\": \"Mollit laborum\",\r\n                        \"price\": 357,\r\n                        \"stock\": 22\r\n                    },\r\n                    {\r\n                        \"id\": \"4e1849ac-dc19-449e-8def-fc3291df9052\",\r\n                        \"name\": \"Quis tempor consequat consequat\",\r\n                        \"price\": 170,\r\n                        \"stock\": 29\r\n                    },\r\n                    {\r\n                        \"id\": \"bfc68341-6130-4cb2-9a52-39d7ad130b4f\",\r\n                        \"name\": \"Irure minim\",\r\n                        \"price\": 27,\r\n                        \"stock\": 23\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"59f0e681-b866-46cd-ae3d-bd084ff01534\",\r\n                \"name\": \"Groveville\",\r\n                \"products\": [\r\n                    {\r\n                        \"id\": \"a37e4adb-7909-44ce-a2e0-e35561014522\",\r\n                        \"name\": \"Incididunt consectetur non voluptate\",\r\n                        \"price\": 104,\r\n                        \"stock\": 11\r\n                    },\r\n                    {\r\n                        \"id\": \"d2aeaa3b-18aa-455b-8d95-2770db066ec4\",\r\n                        \"name\": \"Et reprehenderit est reprehenderit\",\r\n                        \"price\": 496,\r\n                        \"stock\": 17\r\n                    },\r\n                    {\r\n                        \"id\": \"9c8ae49f-b214-473a-8ca1-90f902ad4754\",\r\n                        \"name\": \"Irure\",\r\n                        \"price\": 542,\r\n                        \"stock\": 28\r\n                    },\r\n                    {\r\n                        \"id\": \"a5af4298-69c4-4fa5-8cfb-738254c5b10d\",\r\n                        \"name\": \"Enim ullamco\",\r\n                        \"price\": 99,\r\n                        \"stock\": 0\r\n                    },\r\n                    {\r\n                        \"id\": \"c7f18718-4e5e-48c7-96b3-d3bf7e4dc01b\",\r\n                        \"name\": \"Elit sint in\",\r\n                        \"price\": 507,\r\n                        \"stock\": 30\r\n                    },\r\n                    {\r\n                        \"id\": \"fd797038-e675-4714-b1f2-3915e01a94ee\",\r\n                        \"name\": \"Anim\",\r\n                        \"price\": 615,\r\n                        \"stock\": 4\r\n                    },\r\n                    {\r\n                        \"id\": \"76ffef85-bc64-42f7-b882-8a0c9c22de16\",\r\n                        \"name\": \"Ad ullamco anim\",\r\n                        \"price\": 597,\r\n                        \"stock\": 23\r\n                    },\r\n                    {\r\n                        \"id\": \"79426246-035b-4371-8a2f-677fd21b44e9\",\r\n                        \"name\": \"Amet\",\r\n                        \"price\": 658,\r\n                        \"stock\": 20\r\n                    },\r\n                    {\r\n                        \"id\": \"2cde1a81-f0db-4f58-a04e-92ce328532ac\",\r\n                        \"name\": \"Eu proident\",\r\n                        \"price\": 639,\r\n                        \"stock\": 13\r\n                    },\r\n                    {\r\n                        \"id\": \"760decf4-59ac-4f47-a7f9-dab9590ca49d\",\r\n                        \"name\": \"Anim sunt cillum ea\",\r\n                        \"price\": 781,\r\n                        \"stock\": 27\r\n                    },\r\n                    {\r\n                        \"id\": \"7a3a7d5d-18ab-4f27-9f0f-278ab6bbaee6\",\r\n                        \"name\": \"Ea\",\r\n                        \"price\": 787,\r\n                        \"stock\": 8\r\n                    },\r\n                    {\r\n                        \"id\": \"e7102b8a-042b-4488-a62b-00ce43464ecd\",\r\n                        \"name\": \"Velit dolore ipsum\",\r\n                        \"price\": 494,\r\n                        \"stock\": 17\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"86dc4ee3-6f51-42e2-80d7-04de7d0507d1\",\r\n                \"name\": \"Rivera\",\r\n                \"products\": [\r\n                    {\r\n                        \"id\": \"5b463365-a898-4e48-a669-f77ffaec94c9\",\r\n                        \"name\": \"Proident\",\r\n                        \"price\": 550,\r\n                        \"stock\": 22\r\n                    },\r\n                    {\r\n                        \"id\": \"4ebfba6b-3b80-422b-b27b-0e3f59151548\",\r\n                        \"name\": \"Commodo\",\r\n                        \"price\": 214,\r\n                        \"stock\": 18\r\n                    },\r\n                    {\r\n                        \"id\": \"5534cd13-e8c4-4777-bd9b-8484e2b104f1\",\r\n                        \"name\": \"Ipsum ipsum\",\r\n                        \"price\": 410,\r\n                        \"stock\": 4\r\n                    },\r\n                    {\r\n                        \"id\": \"19fc7136-779c-443e-b170-f072889d06f4\",\r\n                        \"name\": \"Commodo\",\r\n                        \"price\": 733,\r\n                        \"stock\": 5\r\n                    },\r\n                    {\r\n                        \"id\": \"35961313-282a-4fdd-a283-d91cae848ad2\",\r\n                        \"name\": \"Mollit\",\r\n                        \"price\": 349,\r\n                        \"stock\": 21\r\n                    },\r\n                    {\r\n                        \"id\": \"ee83aabf-de23-417f-b7b9-52b471ad1c31\",\r\n                        \"name\": \"Amet esse amet ex\",\r\n                        \"price\": 678,\r\n                        \"stock\": 2\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"2d447b94-2a94-4512-8b25-59823d009ec2\",\r\n                \"name\": \"Shepardsville\",\r\n                \"products\": [\r\n                    {\r\n                        \"id\": \"9e198a84-8a56-41c0-b088-8043011fb9a5\",\r\n                        \"name\": \"Ad amet velit sunt\",\r\n                        \"price\": 221,\r\n                        \"stock\": 19\r\n                    },\r\n                    {\r\n                        \"id\": \"32f72b26-dd9e-4ee7-946f-972d33dabb4f\",\r\n                        \"name\": \"Ea sint deserunt\",\r\n                        \"price\": 690,\r\n                        \"stock\": 20\r\n                    },\r\n                    {\r\n                        \"id\": \"decf82c1-6b4b-41fd-9ee9-a8b68614bf4b\",\r\n                        \"name\": \"Minim in\",\r\n                        \"price\": 142,\r\n                        \"stock\": 18\r\n                    },\r\n                    {\r\n                        \"id\": \"3771b75a-1e21-4ae9-a8b0-6f22e9abddf9\",\r\n                        \"name\": \"Consequat deserunt eiusmod pariatur\",\r\n                        \"price\": 760,\r\n                        \"stock\": 28\r\n                    },\r\n                    {\r\n                        \"id\": \"105c1c11-cd7b-42e2-a125-49163c6f193e\",\r\n                        \"name\": \"Deserunt qui consequat\",\r\n                        \"price\": 196,\r\n                        \"stock\": 2\r\n                    },\r\n                    {\r\n                        \"id\": \"8fe2825e-50da-412b-b0ca-131b8a2771d9\",\r\n                        \"name\": \"Proident non Lorem dolore\",\r\n                        \"price\": 387,\r\n                        \"stock\": 16\r\n                    },\r\n                    {\r\n                        \"id\": \"00c1b1bc-e7b7-4e34-9574-49d5f65c0a47\",\r\n                        \"name\": \"Excepteur\",\r\n                        \"price\": 504,\r\n                        \"stock\": 15\r\n                    },\r\n                    {\r\n                        \"id\": \"6205b809-8376-4ddf-b5b2-dff38ad6edbd\",\r\n                        \"name\": \"Eu\",\r\n                        \"price\": 206,\r\n                        \"stock\": 9\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n}\r\n","package webshop.models;\r\n\r\nimport mithril.M;\r\nimport js.Promise;\r\nusing Lambda;\r\nusing StringTools;\r\n\r\nclass Product \r\n{\r\n    public var id : String;\r\n    public var name : String;\r\n    public var price : Float;\r\n    public var stock : Int;\r\n    \r\n    public var category(default, null) : Category;\r\n\r\n    public function new(data, category) {\r\n        if(data != null) {\r\n            this.id = data.id;\r\n            this.name = data.name;\r\n            this.price = data.price;\r\n            this.stock = data.stock;\r\n        }\r\n\r\n        this.category = category;\r\n    }\r\n\r\n    public function slug() {\r\n        return name.replace(\" \", \"-\").toLowerCase();\r\n    }\r\n\r\n    public static function all() : Promise<Array<Product>> {\r\n        return new Promise<Array<Product>>(function(resolve, reject) {\r\n            Category.all().then(function(cat : Array<Category>) {\r\n                var products = cat.fold(function(c, products : Array<Product>) return products.concat(c.products), []);\r\n                resolve(products);\r\n            });\r\n        });\r\n    }\r\n\r\n    public static function inCategory(category : Category) : Promise<Array<Product>> {\r\n        return new Promise<Array<Product>>(function(resolve, reject) {\r\n            Category.all().then(function(categories : Array<Category>) {\r\n                var products = categories.find(function(c) return c.id == category.id).products;\r\n                resolve(products);\r\n            });\r\n        });\r\n    }\r\n\r\n    public static function search(partialName : String) : Promise<Array<Product>> {\r\n        return all().then(function(products : Array<Product>)\r\n            return products.filter(function(p) \r\n                return p.name.toLowerCase().indexOf(partialName) >= 0\r\n            )\r\n        );\r\n    }\r\n}\r\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\t@:pure private static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\t@:pure private static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\t@:pure private static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\t@:pure static function abs(v:Float):Float;\n\t@:pure static function acos(v:Float):Float;\n\t@:pure static function asin(v:Float):Float;\n\t@:pure static function atan(v:Float):Float;\n\t@:pure static function atan2(y:Float, x:Float):Float;\n\t@:pure static function ceil(v:Float):Int;\n\t@:pure static function cos(v:Float):Float;\n\t@:pure static function exp(v:Float):Float;\n\t@:pure static function floor(v:Float):Int;\n\t@:pure static function log(v:Float):Float;\n\t@:pure static function max(a:Float, b:Float):Float;\n\t@:pure static function min(a:Float, b:Float):Float;\n\t@:pure static function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\t@:pure static function round(v:Float):Int;\n\t@:pure static function sin(v:Float):Float;\n\t@:pure static function sqrt(v:Float):Float;\n\t@:pure static function tan(v:Float):Float;\n\n\t@:pure static inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\t@:pure static inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\t@:pure static inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\t@:pure static inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\t@:pure static inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n"],
"names":[],
"mappings":"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AAAC,OAAO,YAAY,KAAK;GAJhE,ORoCQ,IQpCL,qBAAqB,UACb,mBAAkB,OAAO,iBAAiB,SAClD,CACC,IACA;;;QAKZ,WAAgB;AAAA,SAAO,CACnB,gBACA,iBACA,8DACA,0DACA,yBACA,kDACA;;;;8BC3EG,eAAoB;AAAA,CACvB,EAAG,SAAQ,MAAM;AAAA;;CACjB,UAAU;CACV,YAAY;;;;8BASF,WAA0C;AAAA,CAEpD,YAAY,WAAW;CACvB,EAAG,iBAAgB,MAAM;AAAA,UAAQ;;CAEjC,cAAc,eACV;AAAA,SAAO,SAAS,YAAsB;AAAA,GAClC,eAAe,4BAAa;GAC5B,oBAAoB,eAAe,YAAY;AAAA,WAAO,2BAAY,EAAG;;GACrE,OAAO;;;CAIf,OAAO,YAAY,yBACf;AAAA,mBAAiB,WAAW;AAAA,GACF;GAAtB,eAAc,QAAQ;GACtB,QAAQ;IACT;;;+BAeJ,WACH;AAAA,QAAO,CACH,SACU,iDACE,0BACI,CACR,SACU,iDACE,gBACC,eACA,GAEb,SACU,iDACE,6CACC,eACA,GAEb,SACU,iDACE,mCACC,eACA,IAEb,SACU,iDACE,uBACC,eACA,IAEb,SACU,iDACE,sBACC,eACA,IAEb,SACU,iDACE,mBACC,eACA,IAEb,SACU,iDACE,4BACC,eACA,KAIrB,SACU,iDACE,uBACI,CACR,SACU,iDACE,wBACC,eACA,IAEb,SACU,iDACE,0BACC,eACA,GAEb,SACU,iDACE,oBACC,eACA,IAEb,SACU,iDACE,sCACC,cACA,GAEb,SACU,iDACE,mCACC,eACA,IAEb,SACU,iDACE,kBACC,eACA,GAEb,SACU,iDACE,uBACC,eACA,GAEb,SACU,iDACE,6BACC,eACA,IAEb,SACU,iDACE,gCACC,cACA,GAEb,SACU,iDACE,gBACC,eACA,IAEb,SACU,iDACE,kBACC,eACA,IAEb,SACU,iDACE,4BACC,eACA,GAEb,SACU,iDACE,0BACC,eACA,IAEb,SACU,iDACE,uBACC,cACA,MAIrB,SACU,iDACE,yBACI,CACR,SACU,iDACE,iBACC,eACA,IAEb,SACU,iDACE,+CACC,eACA,IAEb,SACU,iDACE,uBACC,eACA,GAEb,SACU,iDACE,mCACC,eACA,GAEb,SACU,iDACE,qBACC,eACA,IAEb,SACU,iDACE,mDACC,eACA,IAEb,SACU,iDACE,iCACC,cACA,IAEb,SACU,iDACE,6BACC,cACA,IAEb,SACU,iDACE,kCACC,eACA,IAEb,SACU,iDACE,qBACC,eACA,GAEb,SACU,iDACE,uCACC,eACA,IAEb,SACU,iDACE,gDACC,eACA,IAEb,SACU,iDACE,iCACC,eACA,IAEb,SACU,iDACE,+CACC,eACA,GAEb,SACU,iDACE,0CACC,eACA,MAIrB,SACU,iDACE,0BACI,CACR,SACU,iDACE,qCACC,eACA,GAEb,SACU,iDACE,sBACC,eACA,IAEb,SACU,iDACE,qBACC,eACA,IAEb,SACU,iDACE,kCACC,eACA,IAEb,SACU,iDACE,uBACC,eACA,GAEb,SACU,iDACE,8CACC,eACA,IAEb,SACU,iDACE,kBACC,eACA,GAEb,SACU,iDACE,sCACC,eACA,GAEb,SACU,iDACE,oBACC,eACA,IAEb,SACU,iDACE,kBACC,eACA,IAEb,SACU,iDACE,oBACC,eACA,IAEb,SACU,iDACE,uBACC,cACA,IAEb,SACU,iDACE,4BACC,eACA,IAEb,SACU,iDACE,6CACC,eACA,IAEb,SACU,iDACE,yBACC,cACA,MAIrB,SACU,iDACE,2BACI,CACR,SACU,iDACE,kDACC,eACA,IAEb,SACU,iDACE,gDACC,eACA,IAEb,SACU,iDACE,mBACC,eACA,IAEb,SACU,iDACE,0BACC,cACA,GAEb,SACU,iDACE,0BACC,eACA,IAEb,SACU,iDACE,kBACC,eACA,GAEb,SACU,iDACE,6BACC,eACA,IAEb,SACU,iDACE,kBACC,eACA,IAEb,SACU,iDACE,yBACC,eACA,IAEb,SACU,iDACE,iCACC,eACA,IAEb,SACU,iDACE,gBACC,eACA,GAEb,SACU,iDACE,gCACC,eACA,MAIrB,SACU,iDACE,uBACI,CACR,SACU,iDACE,sBACC,eACA,IAEb,SACU,iDACE,qBACC,eACA,IAEb,SACU,iDACE,yBACC,eACA,GAEb,SACU,iDACE,qBACC,eACA,GAEb,SACU,iDACE,oBACC,eACA,IAEb,SACU,iDACE,+BACC,eACA,KAIrB,SACU,iDACE,8BACI,CACR,SACU,iDACE,gCACC,eACA,IAEb,SACU,iDACE,8BACC,eACA,IAEb,SACU,iDACE,sBACC,eACA,IAEb,SACU,iDACE,iDACC,eACA,IAEb,SACU,iDACE,oCACC,eACA,GAEb,SACU,iDACE,uCACC,eACA,IAEb,SACU,iDACE,uBACC,eACA,IAEb,SACU,iDACE,gBACC,eACA;;;OA5hBtB,WACH;AAAA,SAAO,8BAAa,IAAK;;;;6BCHtB,wBAA6B;AAAA,CAChC,EAAG,SAAQ,MAAM;AAAA,EACb,UAAU;EACV,YAAY;EACZ,aAAa;EACb,aAAa;;CAGjB,gBAAgB;;;;6BAON,WACV;AAAA,QAAO,YAA4B,yBAC/B;AAAA,qCAAoB,cAAgC;AAAA,GAChD,eAAe,gBAAS,sBAAuC;AAAA,WAAO,iBAAgB;KAAa;GACnG,QAAQ;;;;oCAKN,mBACV;AAAA,QAAO,YAA4B,yBAC/B;AAAA,qCAAoB,qBAAuC;AAAA,GACvD,eAAe,uBAAgB,YAAY;AAAA,WAAO,QAAQ;;GAC1D,QAAQ;;;;gCAKN,sBACV;AAAA,QAAO,kCAAW,mBACd;AAAA,SAAO,gBAAgB,YACnB;AAAA,UAAO,6BAA6B,gBAAgB;;;;;OAzBzD,WACH;AAAA,SAAO,8BAAa,IAAK;;;;;;;ACyDU,WAAW,UAAU;A9BtB/B,6BAA6B,AAAgC,WAAW,YAAY;AACrF,kBAAkB,AAAgC,CAAC;AACjD,WAAW,WAAW;AACxB,iBAAiB,AAAgC,CAAC;AAEhD,2BAAqC,AAAgC,WAAW,UAAU;AAC3F,gBAA0B,CAAC;AAGzD,UAAU,AAAiC,WAAW,SAAS,aAAa,CAAC;AAG7E,cAAc,AAAiC,WAAW,aAAa,aAAa,CAAC;AAGrF,YAAY,AAAiC,WAAW,WAAW;AACnE,iBAAiB,CAAC;AAGlB,WAAW,AAA+B,WAAW,UAAU;AAC/D,iBAAiB,CAAC;AAGlB,YAAY,AAAiC,WAAW,WAAW,aAAa,CAAC;AAGjF,WAAW;AUuDJ;AKxFR,kBAAkB,uBAA6B;AAC/C,EAAI,gCAA+B,MAAO;AAAA,+BAA8B;;ACwCxE,iBAAyB,sBAA4B;AC8D7C;AACR,gBAAe;AAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ;AAEA;AACA;AACR,iBAAe;AAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ;4BZhHqB;iCAYK;yBAEf;qCENgC;2BAEhC;0BErCD;kBI6MU;8CG3ME;4BQyD5B,irEAKe;;;;"
}